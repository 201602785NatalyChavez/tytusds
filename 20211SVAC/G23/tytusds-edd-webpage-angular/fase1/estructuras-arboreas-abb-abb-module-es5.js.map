{"version":3,"sources":["webpack:///src/app/layout/estructuras-arboreas/abb/abb-routing.module.ts","webpack:///src/app/layout/estructuras-arboreas/abb/abb.module.ts","webpack:///src/app/layout/estructuras-arboreas/abb/abb.component.css","webpack:///src/app/layout/estructuras-arboreas/abb/clase-arbol.ts","webpack:///src/app/layout/estructuras-arboreas/clase-nodo-simple.ts","webpack:///src/app/layout/estructuras-arboreas/abb/abb.component.html","webpack:///src/app/layout/estructuras-arboreas/abb/abb.component.ts"],"names":["routes","path","component","AbbRoutingModule","imports","forChild","exports","AbbModule","declarations","BST","root","dot","datagraph","edgegraph","contadores","nulls","string","data","insertNode","console","log","charCodeAt","valor","node","value","q","length","nodedata","left","right","inOrder","push","id","label","toString","retorno","inOrder2","founding","search","eliminarN","nodo_aux","iz","der","p","cambiar","a","tmp","ya","dotgen","from","to","dotgenarray","Node","datastring","AbbComponent","bst","valoresinsertados","fileContent","setting","element","dynamicDownload","listaEnlJSon","opcionRepeticiones","x","insert","parseInt","visit","JSON","stringify","eliminar","drawSvgNetwork","treeData","getTreeData","loadVisTree","treedata","options","nodes","widthConstraint","layout","hierarchical","levelSeparation","nodeSpacing","parentCentralization","direction","sortMethod","shakeTowards","container","networkContainer","nativeElement","network","vis","Network","that","on","params","title","DOTstring","parsedData","parseDOTNetwork","edges","DIR","LENGTH_MAIN","LENGTH_SUB","window","fileList","file","fileReader","FileReader","self","onloadend","result","readAsText","strCarga","strIntoObj","parse","animacion","undefined","velocidadAnimacion","repeticion","posicion","opcionOperar","valores","valorStrNodo","includes","Insertarcarga","fakeValidateUserData","subscribe","res","dyanmicDownloadByHtmlTag","fileName","text","arg","document","createElement","fileType","indexOf","setAttribute","encodeURIComponent","event","MouseEvent","dispatchEvent","selector","template"],"mappings":"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","file":"estructuras-arboreas-abb-abb-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AbbComponent } from './abb.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: AbbComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AbbRoutingModule {}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { PageHeaderModule } from '../../../shared';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AbbRoutingModule } from './abb-routing.module';\r\nimport { AbbComponent } from './abb.component';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n\r\n@NgModule({\r\n    imports: [MatRadioModule,CommonModule, AbbRoutingModule, PageHeaderModule,FormsModule],\r\n    declarations: [AbbComponent]\r\n})\r\nexport class AbbModule {}\r\n","export default \".graph-container {\\r\\n    height: 25em;\\r\\n    widows: 100%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFiYi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtJQUNaLFlBQVk7QUFDaEIiLCJmaWxlIjoiYWJiLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZ3JhcGgtY29udGFpbmVyIHtcclxuICAgIGhlaWdodDogMjVlbTtcclxuICAgIHdpZG93czogMTAwJTtcclxufSJdfQ== */\";","import  Node  from './../clase-nodo-simple'\r\n\r\nexport default class BST{\r\n    public root:Node\r\n    public data:any\r\n    public dot:string\r\n    public datagraph\r\n    public edgegraph\r\n    public contadores:number\r\n    public nulls:number\r\n    public string:boolean\r\n\r\n    constructor(){\r\n        this.root = null\r\n        this.dot = ''\r\n        this.datagraph = []\r\n        this.edgegraph = []\r\n        this.contadores = 0\r\n        this.nulls = 0\r\n        this.string = false\r\n    }\r\n    getRoot(){\r\n        return this.root\r\n    }\r\n    insert(data){\r\n        //let newNode = new Node(data,this.contadores)\r\n        if(this.root != null) this.insertNode(data, this.root)\r\n        // console.log(newNode.data)\r\n        else {\r\n            if(this.string){\r\n                this.root = new Node(data,this.contadores)\r\n                console.log(this.root.data.charCodeAt(0))\r\n            }else{\r\n                this.root = new Node(data,this.contadores)\r\n            }\r\n            this.contadores += 1\r\n        }\r\n    }\r\n    insertNode(valor, node){\r\n        if(this.string ){\r\n            let value = 0\r\n            for(let q = 0 ; q < valor.length ; q++){\r\n                value += valor.charCodeAt(0)\r\n            }\r\n            console.log(\"VALOR EN AscII: \",value)\r\n        //console.log(\"Nodos\")\r\n        //console.log(node.data, value)\r\n        //console.log(\"Nodos Padre\")\r\n            let nodedata = 0\r\n            for(let q = 0 ; q < node.data.length ; q++){\r\n                nodedata += node.data.charCodeAt(0)\r\n            }\r\n            if(value < nodedata) {\r\n                //console.log(value,\"ES MENOR QUE\",node.data )\r\n                if(node.left != null){\r\n                    this.insertNode(valor,node.left)\r\n                    // node.left.up = node\r\n                }    \r\n                else{\r\n                    node.left = new Node(valor,this.contadores)\r\n                    this.contadores += 1\r\n                }\r\n                    \r\n            }else if (value > nodedata){\r\n            // console.log(value,\"ES MAYOR QUE\",node.data )\r\n                //console.log(5>12)\r\n                if(node.right != null) {\r\n                    this.insertNode(valor,node.right)\r\n                    // node.right.up = node\r\n                }\r\n                else {\r\n                    node.right = new Node(valor,this.contadores)\r\n                    this.contadores += 1\r\n                }\r\n            }else { /// Si hay repeticion, si no, se quita y ya\r\n                if(node.left != null) this.insertNode(valor,node.left)\r\n                else{\r\n                    node.left = new Node(valor, this.contadores)\r\n                    this.contadores += 1\r\n                }\r\n            }\r\n        }else{\r\n            let value = valor\r\n            console.log(\"ES UN NUMERO: \",value)\r\n            if(value < node.data) {\r\n                //console.log(value,\"ES MENOR QUE\",node.data )\r\n                if(node.left != null){\r\n                    this.insertNode(value,node.left)\r\n                    // node.left.up = node\r\n                }    \r\n                else{\r\n                    node.left = new Node(value,this.contadores)\r\n                    this.contadores += 1\r\n                }\r\n                    \r\n            }else if (value > node.data){\r\n            // console.log(value,\"ES MAYOR QUE\",node.data )\r\n                //console.log(5>12)\r\n                if(node.right != null) {\r\n                    this.insertNode(value,node.right)\r\n                    // node.right.up = node\r\n                }\r\n                else {\r\n                    node.right = new Node(value,this.contadores)\r\n                    this.contadores += 1\r\n                }\r\n            }else { /// Si hay repeticion, si no, se quita y ya\r\n                if(node.left != null) this.insertNode(value,node.left)\r\n                else{\r\n                    node.left = new Node(value, this.contadores)\r\n                    this.contadores += 1\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n    inOrder(node){\r\n        if(node !== null){\r\n            //console.log(\"Se va a ir a la izquierda\")\r\n            this.inOrder(node.left)\r\n            console.log(\"NODE DATA\",node.data)\r\n            this.datagraph.push({id:node.id,label:node.data.toString()})\r\n            console.log(\"DATA\",node.data)\r\n            //console.log(\"Regreso de la izquierda\")\r\n            //console.log(\"IMPRIMIENDO EL DEL CENTRO\")\r\n            //console.log(node.data)\r\n            //console.log(\"******\")\r\n            //console.log(\"Se va a ir a la derecha\")\r\n            \r\n            this.inOrder(node.right)\r\n            //console.log(\"Regreso de la derecha\")\r\n        }\r\n\r\n    }\r\n    inOrder2(node,retorno){\r\n        if(node !== null){\r\n            //console.log(\"Se va a ir a la izquierda\")\r\n            retorno = this.inOrder2(node.left,retorno)\r\n            console.log(\"NODE DATA\",node.data)\r\n            this.datagraph.push({id:node.id,label:node.data.toString()})\r\n            console.log(\"DATA\",node.data)\r\n            //console.log(\"Regreso de la izquierda\")\r\n            //console.log(\"IMPRIMIENDO EL DEL CENTRO\")\r\n            //console.log(node.data)\r\n            retorno += \r\n            //console.log(\"******\")\r\n            //console.log(\"Se va a ir a la derecha\")\r\n            \r\n            retorno = this.inOrder2(node.right,retorno)\r\n            //console.log(\"Regreso de la derecha\")\r\n        }\r\n        return retorno\r\n\r\n    }\r\n\r\n    search(node,founding){\r\n        if(node === null) return null\r\n        else if(founding < node.data) {\r\n            return this.search(node.left,founding)\r\n        }\r\n        else if(founding > node.data) {\r\n            return this.search(node.right,founding)\r\n        }else  {\r\n            console.log(node.data)\r\n            return node\r\n        }\r\n\r\n    }\r\n    eliminar(valor){\r\n        this.root = this.eliminarN(this.root,valor)\r\n        \r\n    }\r\n\r\n    eliminarN(nodo_aux,valor){\r\n            if(this.string){\r\n                let value = 0\r\n            for(let q = 0 ; q < valor.length ; q++){\r\n                value += valor.charCodeAt(0)\r\n            }\r\n            console.log(\"VALOR EN AscII: \",value)\r\n        //console.log(\"Nodos\")\r\n        //console.log(node.data, value)\r\n        //console.log(\"Nodos Padre\")\r\n            let nodedata = 0\r\n            for(let q = 0 ; q < nodo_aux.data.length ; q++){\r\n                nodedata += nodo_aux.data.charCodeAt(0)\r\n            }\r\n\r\n                console.log(\"ENTRO A ELIMINAR N.---- Y está eliminando : \",valor)\r\n                if(nodo_aux == null) return null\r\n                else if(valor < nodedata){\r\n                    let iz = this.eliminarN(nodo_aux.left,valor)\r\n                    nodo_aux.left = iz\r\n                }else if( valor > nodedata){\r\n                    let der = this.eliminarN(nodo_aux.right,valor)\r\n                    nodo_aux.right = der\r\n                }else{\r\n                    let p = nodo_aux\r\n                    if(p.right == null){\r\n                        nodo_aux = p.left\r\n                    }else if(p.left == null){\r\n                        nodo_aux = p.right\r\n                    }else{\r\n                        p = this.cambiar(p)\r\n                    }\r\n                    p = null\r\n                }\r\n                return nodo_aux\r\n            }else{\r\n                console.log(\"ENTRO A ELIMINAR N.---- Y está eliminando : \",valor)\r\n                if(nodo_aux == null) return null\r\n                else if(valor < nodo_aux.data){\r\n                    let iz = this.eliminarN(nodo_aux.left,valor)\r\n                    nodo_aux.left = iz\r\n                }else if( valor > nodo_aux.data){\r\n                    let der = this.eliminarN(nodo_aux.right,valor)\r\n                    nodo_aux.right = der\r\n                }else{\r\n                    let p = nodo_aux\r\n                    if(p.right == null){\r\n                        nodo_aux = p.left\r\n                    }else if(p.left == null){\r\n                        nodo_aux = p.right\r\n                    }else{\r\n                        p = this.cambiar(p)\r\n                    }\r\n                    p = null\r\n                }\r\n                return nodo_aux\r\n\r\n            }\r\n    }\r\n\r\n    cambiar(nodo_aux){\r\n        let p = nodo_aux\r\n        let a = nodo_aux.left\r\n        while(a.right != null){\r\n            p = a\r\n            a = a.right\r\n        }\r\n        console.log(\"Nodo aux\",nodo_aux.data)\r\n        console.log(\"A\",a.data)\r\n        nodo_aux.data = a.data\r\n        if(p == nodo_aux){\r\n            p.left = a.left\r\n        }else{\r\n            p.right = a.left\r\n        }return a\r\n    }\r\n\r\n\r\n    dotgen(tmp) {\r\n        if (tmp != null) {\r\n            console.log(tmp.data)\r\n            if(tmp.ya) {\r\n                this.dot+=tmp.data+'[style=\"filled\",color=\"turquoise\"];'\r\n                tmp.ya = false\r\n            }\r\n\r\n            if (tmp.left != null) this.dot += tmp.data+'--'+tmp.left.data+';'\r\n            else {\r\n                this.dot += 'null'+this.nulls+'[color=\"white\", label=\"\"];\\n'\r\n                this.dot += tmp.data+'-- null'+this.nulls+'[color=\"white\", label=\"\"];'\r\n            }\r\n            this.nulls += 1\r\n            if (tmp.right != null) this.dot += tmp.data+'--'+tmp.right.data+';'\r\n            else {\r\n                this.dot += 'null'+this.nulls+'[color=\"white\", label=\"\"];\\n'\r\n                this.dot += tmp.data+'-- null'+this.nulls+'[color=\"white\", label=\"\"];'\r\n            }\r\n            this.nulls += 1\r\n            this.dotgen(tmp.left)\r\n            this.dotgen(tmp.right)\r\n        }\r\n    }\r\n\r\n    dotgenarray(tmp) {\r\n        if (tmp != null) {\r\n            //this.nulls += 1\r\n        \r\n            if (tmp.left != null) {\r\n                this.edgegraph.push({from:tmp.id, to:tmp.left.id})\r\n              //  this.nulls += 1\r\n            }\r\n            if (tmp.right != null) {\r\n                this.edgegraph.push({from:tmp.id,to:tmp.right.id})\r\n                //this.nulls += 1\r\n            }\r\n\r\n\t\t\t\r\n\t\t\t/*\r\n\t\t\tif (tmp.left == null)\r\n\t\t\t\tthis.dot += tmp.value+'-- '+tmp.right.value+';'\r\n\t\t\tif (tmp.right != null && tmp.left !=null) \r\n\t\t\t\tthis.dot += tmp.value+'-- {'+tmp.left.value+' '+temp.right.value+'};'\r\n\t\t\t\r\n\t\t\telse if (tmp.right == null)\r\n\t\t\t\tthis.dot += tmp.value+'-- {'+tmp.left.value+' null};'\r\n\t\t\t\t*/\r\n            this.dotgenarray(tmp.left)\r\n            this.dotgenarray(tmp.right)\r\n        }\r\n    }\r\n\r\n}","export default class Node{\r\n    public data:any\r\n    public right:Node\r\n    public left:Node\r\n    public id:number\r\n    public ya:boolean\r\n    public datastring: boolean\r\n\r\n    constructor(data, id){\r\n        this.data = data\r\n        this.left = null\r\n        this.right = null\r\n        this.id = id\r\n        this.ya = true\r\n        this.datastring = false\r\n        //this.up = null\r\n    }\r\n}\r\n\r\n\r\n//var bst = new BST()\r\n//var root = bst.getRoot()\r\n//var arrayResults = []\r\n//function insertar(){\r\n  //  let agregar = document.querySelector('#agregar')\r\n    //bst.insert(agregar.value)\r\n    //console.log(agregar.value)\r\n\r\n//}\r\n//function inOrder(){\r\n  //  bst.inOrder(bst.root)\r\n    //console.log(\"FUNCIONA\")\r\n\r\n//}\r\n//function buscar(){\r\n\r\n//}\r\n//function eliminar(){\r\n\r\n//}\r\n//bst.insert(35)\r\n//bst.insert(5)\r\n//bst.insert(1)\r\n//bst.insert(10)\r\n//bst.insert(12)\r\n//bst.insert(16)\r\n//bst.insert(20)\r\n//bst.insert(50)\r\n//bst.insert(25)\r\n//bst.insert(75)\r\n//bst.insert(35)\r\n//bst.insert(10)//1 10 15 25 32 35 50 55 60 75 79 81\r\n//bst.insert(81)\r\n//bst.insert(15)\r\n//bst.insert(1)\r\n//bst.insert(32)\r\n//bst.insert(79)\r\n//bst.insert(60)\r\n//bst.insert(55)\r\n//bst.inOrder(bst.root)\r\n//console.log(\"----------------------\")\r\n//var x = bst.search(bst.root,5)\r\n//bst.eliminar(25)\r\n//bst.eliminar(60)\r\n//bst.inOrder(bst.root)\r\n//console.log(\"XXXX\",x.up.up.right.data)","export default \"\\r\\n<div >\\r\\n    <h4>Árbol Binario de Búsqueda</h4>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-xs-2 text-xs-center\\\">\\r\\n            <div class=\\\"card mb-3\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <input class=\\\"form-control\\\" placeholder=\\\"Ingresar nuevo valor\\\" [(ngModel)]=\\\"x\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-xs-2 text-xs-center\\\">\\r\\n            <div class=\\\"card mb-3 text-center my-auto\\\">\\r\\n                <div class=\\\"card-body align-items-center\\\" >\\r\\n                    <button class=\\\"btn btn-secondary mr-3\\\" type=\\\"button\\\" (click)=\\\"Insertar()\\\">Agregar</button>\\r\\n                    <button class=\\\"btn btn-secondary mr-3\\\" type=\\\"button\\\" (click)=\\\"Eliminar()\\\">Eliminar</button>\\r\\n                   <!-- <button class=\\\"btn btn-secondary mr-3\\\" type=\\\"button\\\" (click)=\\\"Actualizar()\\\">Actualizar</button>-->\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>      \\r\\n        \\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-xl-6 text-xs-center\\\">\\r\\n            <fieldset class=\\\"form-group\\\">\\r\\n              <input type=\\\"file\\\" (change)=\\\"cargarArchivo($event.target.files)\\\">\\r\\n                <button class=\\\"btn btn-secondary\\\" type=\\\"submit\\\" (click)=\\\"clickCargar()\\\">Cargar a lista dinamica</button>\\r\\n            </fieldset>\\r\\n        </div>\\r\\n    </div>   \\r\\n    \\r\\n    <br>\\r\\n    <div id=\\\"mynetwork\\\" #siteConfigNetwork></div>\\r\\n    <div class=\\\"col-xl-6 text-xs-center\\\">\\r\\n        <fieldset class=\\\"form-group\\\">\\r\\n            <label>JSON salida</label>\\r\\n            <textarea class=\\\"form-control\\\" rows=\\\"2\\\">{{listaEnlJSon}}</textarea>\\r\\n            <button class=\\\"btn btn-secondary\\\" type=\\\"submit\\\" (click)=\\\"downloadJson()\\\">Guardar</button>\\r\\n        </fieldset>\\r\\n    </div>\\r\\n</div>\\r\\n<style type=\\\"text/css\\\">\\r\\n    #mynetwork {\\r\\n        width: 1200px;\\r\\n        height: 500px;\\r\\n        border: 1px solid lightgray;\\r\\n    }\\r\\n    #mySvgNetwork {\\r\\n        width: 700px;\\r\\n        height: 300px;\\r\\n        border: 1px solid lightgray;\\r\\n    }\\r\\n</style>\";","import { Component, OnInit, Input, ViewChild, ElementRef,AfterViewInit, Renderer2, ComponentFactoryResolver} from '@angular/core';\r\nimport { MatRadioButton } from '@angular/material/radio';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Flecha } from '../impl-canvas/flecha';\r\nimport { FlechaCompuesta } from '../impl-canvas/flecha-compuesta';\r\nimport { RectanguloNodo } from '../impl-canvas/rectangulo-nodo';\r\nimport { Network, DataSet } from 'vis';\r\nimport { of, Subscription } from 'rxjs';\r\ndeclare var vis:any\r\n\r\nimport BST from './clase-arbol'\r\nimport { NullVisitor } from '@angular/compiler/src/render3/r3_ast';\r\n\r\n\r\n@Component({\r\n  selector: 'app-abb',\r\n  templateUrl: './abb.component.html',\r\n  styleUrls: ['./abb.component.css']\r\n})\r\nexport class AbbComponent implements OnInit {\r\n  @ViewChild(\"siteConfigNetwork\") networkContainer: ElementRef;\r\n  \r\n  \r\n  bst = new BST()\r\n  valoresinsertados = []\r\n  x:string\r\n  public network:any\r\n\r\n  strCarga:string\r\n  velocidadAnimacion:number\r\n  opcionRepeticiones:string\r\n  opcionOperar:string\r\n  listaEnlJSon:string\r\n  \r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    this.listaEnlJSon = \"\"\r\n    this.opcionRepeticiones = \"true\"\r\n    \r\n  }\r\n\r\n  Iniciar(){\r\n\r\n  }\r\n  \r\n  Insertar(){\r\n    \r\n    if(this.x.charCodeAt(0)==8) { \r\n      console.log(\"No hay nada\")\r\n    } else if(this.x.charCodeAt(0)>=48 && this.x.charCodeAt(0)<=57) { \r\n      this.bst.insert(parseInt(this.x));\r\n    } else{ \r\n      this.bst.string = true\r\n      this.bst.insert(this.x)\r\n      this.bst.string = false\r\n    }\r\n  \r\n    console.log(\"RAIZ\",this.bst.root)\r\n    \r\n    this.x = ''\r\n    \r\n    console.log(\"----------------------\")\r\n    \r\n    this.x = '' \r\n    this.visit()\r\n    this.listaEnlJSon = JSON.stringify(this.bst);\r\n  }\r\n\r\n  Eliminar(){\r\n    console.log(\"IMPRIMIENDO EL ELIMINAR\")\r\n    if(this.x.charCodeAt(0)==8) { \r\n      console.log(\"No hay nada\")\r\n    } else if(this.x.charCodeAt(0)>=48 && this.x.charCodeAt(0)<=57) { \r\n      this.bst.eliminar(parseInt(this.x));\r\n    } else{ \r\n      this.bst.string = true\r\n      this.bst.eliminar(this.x)\r\n      this.bst.string = false\r\n    }\r\n  \r\n    console.log(this.x)\r\n    this.x = null\r\n    this.visit()\r\n  }\r\n\r\n  visit(){\r\n    this.drawSvgNetwork()\r\n    var treeData = this.getTreeData()\r\n    this.loadVisTree(treeData)\r\n  }\r\n\r\n  loadVisTree(treedata) {\r\n    var options = {\r\n      nodes: {\r\n          widthConstraint: 100,\r\n      },        \r\n      layout: {\r\n          hierarchical: {\r\n              levelSeparation: 100,\r\n              nodeSpacing: 100,\r\n              parentCentralization: true,\r\n              direction: 'UD',        \r\n              sortMethod: 'directed',  \r\n              shakeTowards: 'roots'                        \r\n      },\r\n      },                        \r\n  };\r\n    var container = this.networkContainer.nativeElement;\r\n    this.network = new vis.Network(container, treedata, options);\r\n\r\n    var that = this;\r\n    this.network.on(\"hoverNode\", function (params) {                  \r\n      console.log('hoverNode Event:', params);\r\n    });\r\n    this.network.on(\"blurNode\", function(params){\r\n      console.log('blurNode event:', params);      \r\n    });\r\n  }\r\n\r\n\r\n  getTreeData() {  \r\n   \r\n    \r\n    var nodes =[\r\n        {id: 1, label: 'Node 1', title: 'I am node 1!'},\r\n        {id: 2, label: 'Node 2'},\r\n        {id: 3, label: 'Node 3'},\r\n        {id: 4, label: 'Node 4'},\r\n        {id: 5, label: 'Node 5'},\r\n        {id: 6, label: 'Node 6'}\r\n    ];\r\n\r\n   \r\n    this.bst.dot = '{'\r\n    this.bst.dotgen(this.bst.root)\r\n    this.bst.dot += '}'\r\n    var DOTstring = this.bst.dot\r\n    var parsedData = vis.parseDOTNetwork(DOTstring);\r\n \r\n    this.bst.dot = ''\r\n  \r\n\r\n    var edges = [\r\n        {from: 1, to: 2},\r\n        {from: 1, to: 3},\r\n        {from: 2, to: 4},\r\n        {from: 2, to: 5},\r\n        {from: 5, to: 6}\r\n    ];\r\n \r\n    var treeData = {\r\n      nodes:  parsedData.nodes,\r\n      edges: parsedData.edges\r\n    };\r\n    this.bst.datagraph = []\r\n    this.bst.edgegraph = []\r\n    return treeData;\r\n  }\r\n\r\n  drawSvgNetwork() {\r\n    var nodes = null;\r\n     var edges = null;\r\n     var network = null;\r\n\r\n     var DIR = 'img/refresh-cl/';\r\n     var LENGTH_MAIN = 150;\r\n     var LENGTH_SUB = 50;\r\n\r\n     \r\n           this.bst.datagraph = [];\r\n\r\n       \r\n           this.bst.edgegraph = [];\r\n\r\n        \r\n           var data = {\r\n               nodes: this.bst.datagraph,\r\n               edges: this.bst.edgegraph\r\n           };\r\n           var options = {\r\n            nodes: {\r\n                widthConstraint: 20,\r\n            },        \r\n            layout: {\r\n                hierarchical: {\r\n                    levelSeparation: 100,\r\n                    nodeSpacing: 100,\r\n                    parentCentralization: true,\r\n                    direction: 'UD',        \r\n                    sortMethod: 'directed', \r\n                    shakeTowards: 'roots'                        \r\n            },\r\n            },                        \r\n        };\r\n           window.vis = require('vis-network/standalone');\r\n         \r\n } \r\n\r\n fileContent: string = '';\r\n\r\n  public cargarArchivo(fileList: FileList): void {\r\n    let file = fileList[0];\r\n    let fileReader: FileReader = new FileReader();\r\n    let self = this;\r\n    fileReader.onloadend = function(x) {\r\n      self.fileContent = fileReader.result.toString();\r\n    }\r\n    fileReader.readAsText(file);\r\n    this.strCarga=self.fileContent;\r\n  }\r\n\r\n  clickCargar(){\r\n    this.strCarga=this.fileContent;\r\n    console.log(this.strCarga);\r\n    let strIntoObj = JSON.parse(this.strCarga);\r\n    console.log(strIntoObj);\r\n    this.bst = new BST()\r\n    if(strIntoObj.animacion!=undefined&&strIntoObj.animacion!=null){\r\n      this.velocidadAnimacion=strIntoObj.animacion;\r\n    }\r\n    if(strIntoObj.repeticion!=undefined){\r\n      this.opcionRepeticiones=strIntoObj.repeticion;\r\n    }\r\n    if(strIntoObj.posicion!=undefined){\r\n      if(strIntoObj.posicion=='Inicio'||strIntoObj.posicion=='Fin')\r\n        this.opcionOperar=strIntoObj.posicion;\r\n    }\r\n    for (let valorStrNodo of strIntoObj.valores) {\r\n      valorStrNodo=valorStrNodo.toString();\r\n      this.valoresinsertados.push(valorStrNodo)\r\n      if(this.valoresinsertados.includes(valorStrNodo) && this.opcionRepeticiones == 'false'){\r\n        console.log(\"El valor\",valorStrNodo,\"está repetido\")\r\n      }else{\r\n        this.x = valorStrNodo\r\n        this.Insertarcarga()\r\n\r\n      \r\n      }\r\n    }\r\n    this.visit()\r\n    this.valoresinsertados = []\r\n    \r\n  }\r\n  Insertarcarga(){\r\n   \r\n    if(this.x.charCodeAt(0)==8) { \r\n      console.log(\"No hay nada\")\r\n    } else if(this.x.charCodeAt(0)>=48 && this.x.charCodeAt(0)<=57) { \r\n      this.bst.insert(parseInt(this.x));\r\n    } else{ \r\n      this.bst.string = true\r\n      this.bst.insert(this.x)\r\n      this.bst.string = false\r\n    }\r\n  \r\n    console.log(\"RAIZ\",this.bst.root)\r\n    \r\n    this.listaEnlJSon = JSON.stringify(this.bst);\r\n    this.x = ''\r\n  }\r\n\r\n\r\n  private setting = {\r\n    element: {\r\n      dynamicDownload: null as HTMLElement\r\n    }\r\n  }\r\n  downloadJson() {\r\n    this.fakeValidateUserData().subscribe((res) => {\r\n      this.dyanmicDownloadByHtmlTag({\r\n        fileName: 'ABB.json',\r\n        text: res\r\n      });\r\n    });\r\n  }\r\n  fakeValidateUserData() {\r\n    return of(this.listaEnlJSon);\r\n  }\r\n  private dyanmicDownloadByHtmlTag(arg: {\r\n    fileName: string,\r\n    text: string\r\n    }) {\r\n      if (!this.setting.element.dynamicDownload) {\r\n        this.setting.element.dynamicDownload = document.createElement('a');\r\n      }\r\n      const element = this.setting.element.dynamicDownload;\r\n      const fileType = arg.fileName.indexOf('.json') > -1 ? 'text/json' : 'text/plain';\r\n      element.setAttribute('href', `data:${fileType};charset=utf-8,${encodeURIComponent(arg.text)}`);\r\n      element.setAttribute('download', arg.fileName);\r\n      var event = new MouseEvent(\"click\");\r\n      element.dispatchEvent(event);\r\n    }\r\n\r\n}\r\n"]}