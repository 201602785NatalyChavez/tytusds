{"version":3,"sources":["./src/app/layout/estructuras-arboreas/abb/abb-routing.module.ts","./src/app/layout/estructuras-arboreas/abb/abb.module.ts","./src/app/layout/estructuras-arboreas/abb/abb.component.css","./src/app/layout/estructuras-arboreas/abb/clase-arbol.ts","./src/app/layout/estructuras-arboreas/clase-nodo-simple.ts","./src/app/layout/estructuras-arboreas/abb/abb.component.html","./src/app/layout/estructuras-arboreas/abb/abb.component.ts"],"names":[],"mappings":"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","file":"estructuras-arboreas-abb-abb-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AbbComponent } from './abb.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: AbbComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AbbRoutingModule {}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { PageHeaderModule } from '../../../shared';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AbbRoutingModule } from './abb-routing.module';\r\nimport { AbbComponent } from './abb.component';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n\r\n@NgModule({\r\n    imports: [MatRadioModule,CommonModule, AbbRoutingModule, PageHeaderModule,FormsModule],\r\n    declarations: [AbbComponent]\r\n})\r\nexport class AbbModule {}\r\n","export default \".graph-container {\\r\\n    height: 25em;\\r\\n    widows: 100%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFiYi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtJQUNaLFlBQVk7QUFDaEIiLCJmaWxlIjoiYWJiLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZ3JhcGgtY29udGFpbmVyIHtcclxuICAgIGhlaWdodDogMjVlbTtcclxuICAgIHdpZG93czogMTAwJTtcclxufSJdfQ== */\";","import  Node  from './../clase-nodo-simple'\r\n\r\nexport default class BST{\r\n    public root:Node\r\n    public data:any\r\n    public dot:string\r\n    public datagraph\r\n    public edgegraph\r\n    public contadores:number\r\n    public nulls:number\r\n    public string:boolean\r\n\r\n    constructor(){\r\n        this.root = null\r\n        this.dot = ''\r\n        this.datagraph = []\r\n        this.edgegraph = []\r\n        this.contadores = 0\r\n        this.nulls = 0\r\n        this.string = false\r\n    }\r\n    getRoot(){\r\n        return this.root\r\n    }\r\n    insert(data){\r\n        //let newNode = new Node(data,this.contadores)\r\n        if(this.root != null) this.insertNode(data, this.root)\r\n        // console.log(newNode.data)\r\n        else {\r\n            if(this.string){\r\n                this.root = new Node(data,this.contadores)\r\n                console.log(this.root.data.charCodeAt(0))\r\n            }else{\r\n                this.root = new Node(data,this.contadores)\r\n            }\r\n            this.contadores += 1\r\n        }\r\n    }\r\n    insertNode(valor, node){\r\n        if(this.string ){\r\n            let value = 0\r\n            for(let q = 0 ; q < valor.length ; q++){\r\n                value += valor.charCodeAt(0)\r\n            }\r\n            console.log(\"VALOR EN AscII: \",value)\r\n        //console.log(\"Nodos\")\r\n        //console.log(node.data, value)\r\n        //console.log(\"Nodos Padre\")\r\n            let nodedata = 0\r\n            for(let q = 0 ; q < node.data.length ; q++){\r\n                nodedata += node.data.charCodeAt(0)\r\n            }\r\n            if(value < nodedata) {\r\n                //console.log(value,\"ES MENOR QUE\",node.data )\r\n                if(node.left != null){\r\n                    this.insertNode(valor,node.left)\r\n                    // node.left.up = node\r\n                }    \r\n                else{\r\n                    node.left = new Node(valor,this.contadores)\r\n                    this.contadores += 1\r\n                }\r\n                    \r\n            }else if (value > nodedata){\r\n            // console.log(value,\"ES MAYOR QUE\",node.data )\r\n                //console.log(5>12)\r\n                if(node.right != null) {\r\n                    this.insertNode(valor,node.right)\r\n                    // node.right.up = node\r\n                }\r\n                else {\r\n                    node.right = new Node(valor,this.contadores)\r\n                    this.contadores += 1\r\n                }\r\n            }else { /// Si hay repeticion, si no, se quita y ya\r\n                if(node.left != null) this.insertNode(valor,node.left)\r\n                else{\r\n                    node.left = new Node(valor, this.contadores)\r\n                    this.contadores += 1\r\n                }\r\n            }\r\n        }else{\r\n            let value = valor\r\n            console.log(\"ES UN NUMERO: \",value)\r\n            if(value < node.data) {\r\n                //console.log(value,\"ES MENOR QUE\",node.data )\r\n                if(node.left != null){\r\n                    this.insertNode(value,node.left)\r\n                    // node.left.up = node\r\n                }    \r\n                else{\r\n                    node.left = new Node(value,this.contadores)\r\n                    this.contadores += 1\r\n                }\r\n                    \r\n            }else if (value > node.data){\r\n            // console.log(value,\"ES MAYOR QUE\",node.data )\r\n                //console.log(5>12)\r\n                if(node.right != null) {\r\n                    this.insertNode(value,node.right)\r\n                    // node.right.up = node\r\n                }\r\n                else {\r\n                    node.right = new Node(value,this.contadores)\r\n                    this.contadores += 1\r\n                }\r\n            }else { /// Si hay repeticion, si no, se quita y ya\r\n                if(node.left != null) this.insertNode(value,node.left)\r\n                else{\r\n                    node.left = new Node(value, this.contadores)\r\n                    this.contadores += 1\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n    inOrder(node){\r\n        if(node !== null){\r\n            //console.log(\"Se va a ir a la izquierda\")\r\n            this.inOrder(node.left)\r\n            console.log(\"NODE DATA\",node.data)\r\n            this.datagraph.push({id:node.id,label:node.data.toString()})\r\n            console.log(\"DATA\",node.data)\r\n            //console.log(\"Regreso de la izquierda\")\r\n            //console.log(\"IMPRIMIENDO EL DEL CENTRO\")\r\n            //console.log(node.data)\r\n            //console.log(\"******\")\r\n            //console.log(\"Se va a ir a la derecha\")\r\n            \r\n            this.inOrder(node.right)\r\n            //console.log(\"Regreso de la derecha\")\r\n        }\r\n\r\n    }\r\n    inOrder2(node,retorno){\r\n        if(node !== null){\r\n            //console.log(\"Se va a ir a la izquierda\")\r\n            retorno = this.inOrder2(node.left,retorno)\r\n            console.log(\"NODE DATA\",node.data)\r\n            this.datagraph.push({id:node.id,label:node.data.toString()})\r\n            console.log(\"DATA\",node.data)\r\n            //console.log(\"Regreso de la izquierda\")\r\n            //console.log(\"IMPRIMIENDO EL DEL CENTRO\")\r\n            //console.log(node.data)\r\n            retorno += \r\n            //console.log(\"******\")\r\n            //console.log(\"Se va a ir a la derecha\")\r\n            \r\n            retorno = this.inOrder2(node.right,retorno)\r\n            //console.log(\"Regreso de la derecha\")\r\n        }\r\n        return retorno\r\n\r\n    }\r\n\r\n    search(node,founding){\r\n        if(node === null) return null\r\n        else if(founding < node.data) {\r\n            return this.search(node.left,founding)\r\n        }\r\n        else if(founding > node.data) {\r\n            return this.search(node.right,founding)\r\n        }else  {\r\n            console.log(node.data)\r\n            return node\r\n        }\r\n\r\n    }\r\n    eliminar(valor){\r\n        this.root = this.eliminarN(this.root,valor)\r\n        \r\n    }\r\n\r\n    eliminarN(nodo_aux,valor){\r\n            if(this.string){\r\n                let value = 0\r\n            for(let q = 0 ; q < valor.length ; q++){\r\n                value += valor.charCodeAt(0)\r\n            }\r\n            console.log(\"VALOR EN AscII: \",value)\r\n        //console.log(\"Nodos\")\r\n        //console.log(node.data, value)\r\n        //console.log(\"Nodos Padre\")\r\n            let nodedata = 0\r\n            for(let q = 0 ; q < nodo_aux.data.length ; q++){\r\n                nodedata += nodo_aux.data.charCodeAt(0)\r\n            }\r\n\r\n                console.log(\"ENTRO A ELIMINAR N.---- Y está eliminando : \",valor)\r\n                if(nodo_aux == null) return null\r\n                else if(valor < nodedata){\r\n                    let iz = this.eliminarN(nodo_aux.left,valor)\r\n                    nodo_aux.left = iz\r\n                }else if( valor > nodedata){\r\n                    let der = this.eliminarN(nodo_aux.right,valor)\r\n                    nodo_aux.right = der\r\n                }else{\r\n                    let p = nodo_aux\r\n                    if(p.right == null){\r\n                        nodo_aux = p.left\r\n                    }else if(p.left == null){\r\n                        nodo_aux = p.right\r\n                    }else{\r\n                        p = this.cambiar(p)\r\n                    }\r\n                    p = null\r\n                }\r\n                return nodo_aux\r\n            }else{\r\n                console.log(\"ENTRO A ELIMINAR N.---- Y está eliminando : \",valor)\r\n                if(nodo_aux == null) return null\r\n                else if(valor < nodo_aux.data){\r\n                    let iz = this.eliminarN(nodo_aux.left,valor)\r\n                    nodo_aux.left = iz\r\n                }else if( valor > nodo_aux.data){\r\n                    let der = this.eliminarN(nodo_aux.right,valor)\r\n                    nodo_aux.right = der\r\n                }else{\r\n                    let p = nodo_aux\r\n                    if(p.right == null){\r\n                        nodo_aux = p.left\r\n                    }else if(p.left == null){\r\n                        nodo_aux = p.right\r\n                    }else{\r\n                        p = this.cambiar(p)\r\n                    }\r\n                    p = null\r\n                }\r\n                return nodo_aux\r\n\r\n            }\r\n    }\r\n\r\n    cambiar(nodo_aux){\r\n        let p = nodo_aux\r\n        let a = nodo_aux.left\r\n        while(a.right != null){\r\n            p = a\r\n            a = a.right\r\n        }\r\n        console.log(\"Nodo aux\",nodo_aux.data)\r\n        console.log(\"A\",a.data)\r\n        nodo_aux.data = a.data\r\n        if(p == nodo_aux){\r\n            p.left = a.left\r\n        }else{\r\n            p.right = a.left\r\n        }return a\r\n    }\r\n\r\n\r\n    dotgen(tmp) {\r\n        if (tmp != null) {\r\n            console.log(tmp.data)\r\n            if(tmp.ya) {\r\n                this.dot+=tmp.data+'[style=\"filled\",color=\"turquoise\"];'\r\n                tmp.ya = false\r\n            }\r\n\r\n            if (tmp.left != null) this.dot += tmp.data+'--'+tmp.left.data+';'\r\n            else {\r\n                this.dot += 'null'+this.nulls+'[color=\"white\", label=\"\"];\\n'\r\n                this.dot += tmp.data+'-- null'+this.nulls+'[color=\"white\", label=\"\"];'\r\n            }\r\n            this.nulls += 1\r\n            if (tmp.right != null) this.dot += tmp.data+'--'+tmp.right.data+';'\r\n            else {\r\n                this.dot += 'null'+this.nulls+'[color=\"white\", label=\"\"];\\n'\r\n                this.dot += tmp.data+'-- null'+this.nulls+'[color=\"white\", label=\"\"];'\r\n            }\r\n            this.nulls += 1\r\n            this.dotgen(tmp.left)\r\n            this.dotgen(tmp.right)\r\n        }\r\n    }\r\n\r\n    dotgenarray(tmp) {\r\n        if (tmp != null) {\r\n            //this.nulls += 1\r\n        \r\n            if (tmp.left != null) {\r\n                this.edgegraph.push({from:tmp.id, to:tmp.left.id})\r\n              //  this.nulls += 1\r\n            }\r\n            if (tmp.right != null) {\r\n                this.edgegraph.push({from:tmp.id,to:tmp.right.id})\r\n                //this.nulls += 1\r\n            }\r\n\r\n\t\t\t\r\n\t\t\t/*\r\n\t\t\tif (tmp.left == null)\r\n\t\t\t\tthis.dot += tmp.value+'-- '+tmp.right.value+';'\r\n\t\t\tif (tmp.right != null && tmp.left !=null) \r\n\t\t\t\tthis.dot += tmp.value+'-- {'+tmp.left.value+' '+temp.right.value+'};'\r\n\t\t\t\r\n\t\t\telse if (tmp.right == null)\r\n\t\t\t\tthis.dot += tmp.value+'-- {'+tmp.left.value+' null};'\r\n\t\t\t\t*/\r\n            this.dotgenarray(tmp.left)\r\n            this.dotgenarray(tmp.right)\r\n        }\r\n    }\r\n\r\n}","export default class Node{\r\n    public data:any\r\n    public right:Node\r\n    public left:Node\r\n    public id:number\r\n    public ya:boolean\r\n    public datastring: boolean\r\n\r\n    constructor(data, id){\r\n        this.data = data\r\n        this.left = null\r\n        this.right = null\r\n        this.id = id\r\n        this.ya = true\r\n        this.datastring = false\r\n        //this.up = null\r\n    }\r\n}\r\n\r\n\r\n//var bst = new BST()\r\n//var root = bst.getRoot()\r\n//var arrayResults = []\r\n//function insertar(){\r\n  //  let agregar = document.querySelector('#agregar')\r\n    //bst.insert(agregar.value)\r\n    //console.log(agregar.value)\r\n\r\n//}\r\n//function inOrder(){\r\n  //  bst.inOrder(bst.root)\r\n    //console.log(\"FUNCIONA\")\r\n\r\n//}\r\n//function buscar(){\r\n\r\n//}\r\n//function eliminar(){\r\n\r\n//}\r\n//bst.insert(35)\r\n//bst.insert(5)\r\n//bst.insert(1)\r\n//bst.insert(10)\r\n//bst.insert(12)\r\n//bst.insert(16)\r\n//bst.insert(20)\r\n//bst.insert(50)\r\n//bst.insert(25)\r\n//bst.insert(75)\r\n//bst.insert(35)\r\n//bst.insert(10)//1 10 15 25 32 35 50 55 60 75 79 81\r\n//bst.insert(81)\r\n//bst.insert(15)\r\n//bst.insert(1)\r\n//bst.insert(32)\r\n//bst.insert(79)\r\n//bst.insert(60)\r\n//bst.insert(55)\r\n//bst.inOrder(bst.root)\r\n//console.log(\"----------------------\")\r\n//var x = bst.search(bst.root,5)\r\n//bst.eliminar(25)\r\n//bst.eliminar(60)\r\n//bst.inOrder(bst.root)\r\n//console.log(\"XXXX\",x.up.up.right.data)","export default \"\\r\\n<div >\\r\\n    <h4>Árbol Binario de Búsqueda</h4>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-xs-2 text-xs-center\\\">\\r\\n            <div class=\\\"card mb-3\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <input class=\\\"form-control\\\" placeholder=\\\"Ingresar nuevo valor\\\" [(ngModel)]=\\\"x\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-xs-2 text-xs-center\\\">\\r\\n            <div class=\\\"card mb-3 text-center my-auto\\\">\\r\\n                <div class=\\\"card-body align-items-center\\\" >\\r\\n                    <button class=\\\"btn btn-secondary mr-3\\\" type=\\\"button\\\" (click)=\\\"Insertar()\\\">Agregar</button>\\r\\n                    <button class=\\\"btn btn-secondary mr-3\\\" type=\\\"button\\\" (click)=\\\"Eliminar()\\\">Eliminar</button>\\r\\n                   <!-- <button class=\\\"btn btn-secondary mr-3\\\" type=\\\"button\\\" (click)=\\\"Actualizar()\\\">Actualizar</button>-->\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>      \\r\\n        \\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-xl-6 text-xs-center\\\">\\r\\n            <fieldset class=\\\"form-group\\\">\\r\\n              <input type=\\\"file\\\" (change)=\\\"cargarArchivo($event.target.files)\\\">\\r\\n                <button class=\\\"btn btn-secondary\\\" type=\\\"submit\\\" (click)=\\\"clickCargar()\\\">Cargar a lista dinamica</button>\\r\\n            </fieldset>\\r\\n        </div>\\r\\n    </div>   \\r\\n    \\r\\n    <br>\\r\\n    <div id=\\\"mynetwork\\\" #siteConfigNetwork></div>\\r\\n    <div class=\\\"col-xl-6 text-xs-center\\\">\\r\\n        <fieldset class=\\\"form-group\\\">\\r\\n            <label>JSON salida</label>\\r\\n            <textarea class=\\\"form-control\\\" rows=\\\"2\\\">{{listaEnlJSon}}</textarea>\\r\\n            <button class=\\\"btn btn-secondary\\\" type=\\\"submit\\\" (click)=\\\"downloadJson()\\\">Guardar</button>\\r\\n        </fieldset>\\r\\n    </div>\\r\\n</div>\\r\\n<style type=\\\"text/css\\\">\\r\\n    #mynetwork {\\r\\n        width: 1200px;\\r\\n        height: 500px;\\r\\n        border: 1px solid lightgray;\\r\\n    }\\r\\n    #mySvgNetwork {\\r\\n        width: 700px;\\r\\n        height: 300px;\\r\\n        border: 1px solid lightgray;\\r\\n    }\\r\\n</style>\";","import { Component, OnInit, Input, ViewChild, ElementRef,AfterViewInit, Renderer2, ComponentFactoryResolver} from '@angular/core';\r\nimport { MatRadioButton } from '@angular/material/radio';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Flecha } from '../impl-canvas/flecha';\r\nimport { FlechaCompuesta } from '../impl-canvas/flecha-compuesta';\r\nimport { RectanguloNodo } from '../impl-canvas/rectangulo-nodo';\r\nimport { Network, DataSet } from 'vis';\r\nimport { of, Subscription } from 'rxjs';\r\ndeclare var vis:any\r\n\r\nimport BST from './clase-arbol'\r\nimport { NullVisitor } from '@angular/compiler/src/render3/r3_ast';\r\n\r\n\r\n@Component({\r\n  selector: 'app-abb',\r\n  templateUrl: './abb.component.html',\r\n  styleUrls: ['./abb.component.css']\r\n})\r\nexport class AbbComponent implements OnInit {\r\n  @ViewChild(\"siteConfigNetwork\") networkContainer: ElementRef;\r\n  \r\n  \r\n  bst = new BST()\r\n  valoresinsertados = []\r\n  x:string\r\n  public network:any\r\n\r\n  strCarga:string\r\n  velocidadAnimacion:number\r\n  opcionRepeticiones:string\r\n  opcionOperar:string\r\n  listaEnlJSon:string\r\n  \r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    this.listaEnlJSon = \"\"\r\n    this.opcionRepeticiones = \"true\"\r\n    \r\n  }\r\n\r\n  Iniciar(){\r\n\r\n  }\r\n  \r\n  Insertar(){\r\n    \r\n    if(this.x.charCodeAt(0)==8) { \r\n      console.log(\"No hay nada\")\r\n    } else if(this.x.charCodeAt(0)>=48 && this.x.charCodeAt(0)<=57) { \r\n      this.bst.insert(parseInt(this.x));\r\n    } else{ \r\n      this.bst.string = true\r\n      this.bst.insert(this.x)\r\n      this.bst.string = false\r\n    }\r\n  \r\n    console.log(\"RAIZ\",this.bst.root)\r\n    \r\n    this.x = ''\r\n    \r\n    console.log(\"----------------------\")\r\n    \r\n    this.x = '' \r\n    this.visit()\r\n    this.listaEnlJSon = JSON.stringify(this.bst);\r\n  }\r\n\r\n  Eliminar(){\r\n    console.log(\"IMPRIMIENDO EL ELIMINAR\")\r\n    if(this.x.charCodeAt(0)==8) { \r\n      console.log(\"No hay nada\")\r\n    } else if(this.x.charCodeAt(0)>=48 && this.x.charCodeAt(0)<=57) { \r\n      this.bst.eliminar(parseInt(this.x));\r\n    } else{ \r\n      this.bst.string = true\r\n      this.bst.eliminar(this.x)\r\n      this.bst.string = false\r\n    }\r\n  \r\n    console.log(this.x)\r\n    this.x = null\r\n    this.visit()\r\n  }\r\n\r\n  visit(){\r\n    this.drawSvgNetwork()\r\n    var treeData = this.getTreeData()\r\n    this.loadVisTree(treeData)\r\n  }\r\n\r\n  loadVisTree(treedata) {\r\n    var options = {\r\n      nodes: {\r\n          widthConstraint: 100,\r\n      },        \r\n      layout: {\r\n          hierarchical: {\r\n              levelSeparation: 100,\r\n              nodeSpacing: 100,\r\n              parentCentralization: true,\r\n              direction: 'UD',        \r\n              sortMethod: 'directed',  \r\n              shakeTowards: 'roots'                        \r\n      },\r\n      },                        \r\n  };\r\n    var container = this.networkContainer.nativeElement;\r\n    this.network = new vis.Network(container, treedata, options);\r\n\r\n    var that = this;\r\n    this.network.on(\"hoverNode\", function (params) {                  \r\n      console.log('hoverNode Event:', params);\r\n    });\r\n    this.network.on(\"blurNode\", function(params){\r\n      console.log('blurNode event:', params);      \r\n    });\r\n  }\r\n\r\n\r\n  getTreeData() {  \r\n   \r\n    \r\n    var nodes =[\r\n        {id: 1, label: 'Node 1', title: 'I am node 1!'},\r\n        {id: 2, label: 'Node 2'},\r\n        {id: 3, label: 'Node 3'},\r\n        {id: 4, label: 'Node 4'},\r\n        {id: 5, label: 'Node 5'},\r\n        {id: 6, label: 'Node 6'}\r\n    ];\r\n\r\n   \r\n    this.bst.dot = '{'\r\n    this.bst.dotgen(this.bst.root)\r\n    this.bst.dot += '}'\r\n    var DOTstring = this.bst.dot\r\n    var parsedData = vis.parseDOTNetwork(DOTstring);\r\n \r\n    this.bst.dot = ''\r\n  \r\n\r\n    var edges = [\r\n        {from: 1, to: 2},\r\n        {from: 1, to: 3},\r\n        {from: 2, to: 4},\r\n        {from: 2, to: 5},\r\n        {from: 5, to: 6}\r\n    ];\r\n \r\n    var treeData = {\r\n      nodes:  parsedData.nodes,\r\n      edges: parsedData.edges\r\n    };\r\n    this.bst.datagraph = []\r\n    this.bst.edgegraph = []\r\n    return treeData;\r\n  }\r\n\r\n  drawSvgNetwork() {\r\n    var nodes = null;\r\n     var edges = null;\r\n     var network = null;\r\n\r\n     var DIR = 'img/refresh-cl/';\r\n     var LENGTH_MAIN = 150;\r\n     var LENGTH_SUB = 50;\r\n\r\n     \r\n           this.bst.datagraph = [];\r\n\r\n       \r\n           this.bst.edgegraph = [];\r\n\r\n        \r\n           var data = {\r\n               nodes: this.bst.datagraph,\r\n               edges: this.bst.edgegraph\r\n           };\r\n           var options = {\r\n            nodes: {\r\n                widthConstraint: 20,\r\n            },        \r\n            layout: {\r\n                hierarchical: {\r\n                    levelSeparation: 100,\r\n                    nodeSpacing: 100,\r\n                    parentCentralization: true,\r\n                    direction: 'UD',        \r\n                    sortMethod: 'directed', \r\n                    shakeTowards: 'roots'                        \r\n            },\r\n            },                        \r\n        };\r\n           window.vis = require('vis-network/standalone');\r\n         \r\n } \r\n\r\n fileContent: string = '';\r\n\r\n  public cargarArchivo(fileList: FileList): void {\r\n    let file = fileList[0];\r\n    let fileReader: FileReader = new FileReader();\r\n    let self = this;\r\n    fileReader.onloadend = function(x) {\r\n      self.fileContent = fileReader.result.toString();\r\n    }\r\n    fileReader.readAsText(file);\r\n    this.strCarga=self.fileContent;\r\n  }\r\n\r\n  clickCargar(){\r\n    this.strCarga=this.fileContent;\r\n    console.log(this.strCarga);\r\n    let strIntoObj = JSON.parse(this.strCarga);\r\n    console.log(strIntoObj);\r\n    this.bst = new BST()\r\n    if(strIntoObj.animacion!=undefined&&strIntoObj.animacion!=null){\r\n      this.velocidadAnimacion=strIntoObj.animacion;\r\n    }\r\n    if(strIntoObj.repeticion!=undefined){\r\n      this.opcionRepeticiones=strIntoObj.repeticion;\r\n    }\r\n    if(strIntoObj.posicion!=undefined){\r\n      if(strIntoObj.posicion=='Inicio'||strIntoObj.posicion=='Fin')\r\n        this.opcionOperar=strIntoObj.posicion;\r\n    }\r\n    for (let valorStrNodo of strIntoObj.valores) {\r\n      valorStrNodo=valorStrNodo.toString();\r\n      this.valoresinsertados.push(valorStrNodo)\r\n      if(this.valoresinsertados.includes(valorStrNodo) && this.opcionRepeticiones == 'false'){\r\n        console.log(\"El valor\",valorStrNodo,\"está repetido\")\r\n      }else{\r\n        this.x = valorStrNodo\r\n        this.Insertarcarga()\r\n\r\n      \r\n      }\r\n    }\r\n    this.visit()\r\n    this.valoresinsertados = []\r\n    \r\n  }\r\n  Insertarcarga(){\r\n   \r\n    if(this.x.charCodeAt(0)==8) { \r\n      console.log(\"No hay nada\")\r\n    } else if(this.x.charCodeAt(0)>=48 && this.x.charCodeAt(0)<=57) { \r\n      this.bst.insert(parseInt(this.x));\r\n    } else{ \r\n      this.bst.string = true\r\n      this.bst.insert(this.x)\r\n      this.bst.string = false\r\n    }\r\n  \r\n    console.log(\"RAIZ\",this.bst.root)\r\n    \r\n    this.listaEnlJSon = JSON.stringify(this.bst);\r\n    this.x = ''\r\n  }\r\n\r\n\r\n  private setting = {\r\n    element: {\r\n      dynamicDownload: null as HTMLElement\r\n    }\r\n  }\r\n  downloadJson() {\r\n    this.fakeValidateUserData().subscribe((res) => {\r\n      this.dyanmicDownloadByHtmlTag({\r\n        fileName: 'ABB.json',\r\n        text: res\r\n      });\r\n    });\r\n  }\r\n  fakeValidateUserData() {\r\n    return of(this.listaEnlJSon);\r\n  }\r\n  private dyanmicDownloadByHtmlTag(arg: {\r\n    fileName: string,\r\n    text: string\r\n    }) {\r\n      if (!this.setting.element.dynamicDownload) {\r\n        this.setting.element.dynamicDownload = document.createElement('a');\r\n      }\r\n      const element = this.setting.element.dynamicDownload;\r\n      const fileType = arg.fileName.indexOf('.json') > -1 ? 'text/json' : 'text/plain';\r\n      element.setAttribute('href', `data:${fileType};charset=utf-8,${encodeURIComponent(arg.text)}`);\r\n      element.setAttribute('download', arg.fileName);\r\n      var event = new MouseEvent(\"click\");\r\n      element.dispatchEvent(event);\r\n    }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}