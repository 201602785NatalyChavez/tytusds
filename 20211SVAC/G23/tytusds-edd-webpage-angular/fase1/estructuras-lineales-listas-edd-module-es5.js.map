{"version":3,"sources":["webpack:///src/app/layout/estructuras-lineales/impl-canvas/rectangulo-nodo.ts","webpack:///src/app/layout/estructuras-lineales/impl-estructuras/pila.ts","webpack:///src/app/layout/estructuras-lineales/impl-estructuras/nodo-doble.ts","webpack:///src/app/layout/estructuras-lineales/impl-canvas/flecha.ts","webpack:///src/app/layout/estructuras-lineales/impl-estructuras/lista-circular-simple.ts","webpack:///src/app/layout/estructuras-lineales/impl-estructuras/lista-circular-doble.ts","webpack:///src/app/layout/estructuras-lineales/impl-estructuras/json-nodo.ts","webpack:///src/app/layout/estructuras-lineales/listas-edd.component.ts","webpack:///src/app/layout/estructuras-lineales/impl-estructuras/cola.ts","webpack:///src/app/layout/estructuras-lineales/listas-edd.module.ts","webpack:///src/app/layout/estructuras-lineales/impl-canvas/flecha-compuesta.ts","webpack:///src/app/layout/estructuras-lineales/listas-edd.component.html","webpack:///src/app/layout/estructuras-lineales/listas-edd-routing.module.ts","webpack:///src/app/layout/estructuras-lineales/impl-estructuras/nodo-simple.ts","webpack:///src/app/layout/estructuras-lineales/impl-estructuras/cola-prioridad.ts","webpack:///src/app/layout/estructuras-lineales/impl-estructuras/lista-simple-enlaz.ts","webpack:///src/app/layout/estructuras-lineales/listas-edd.component.css","webpack:///src/app/layout/estructuras-lineales/impl-estructuras/lista-doble-enlaz.ts"],"names":["RectanguloNodo","ctx","texto","x","y","ancho","alto","esDoble","banderaAnimar","colorRelleno","colorBorde","colorTexto","estiloTexto","anchoRectangulo","xCola","yCola","xHead","xFinal","yFinal","xInicial","yInicial","calcularCoords","draw","undefined","fillStyle","fillRect","drawText","textAlign","font","sumaX","length","fillText","canvas","width","Pila","longitud","colaArray","Array","aux","inicio","i","getData","getNext","data","nuevo","setNext","nodo","previo","valor","existeValor","Error","posicion","newData","NodoDoble","next","prev","Flecha","fromx","fromy","tox","toy","anchoLinea","colorFlecha","esBidireccional","x1","x2","y1","y2","canvas_arrow","headlen","dx","dy","angle","Math","atan2","moveTo","lineTo","cos","PI","sin","strokeStyle","lineWidth","stroke","ListaCircularSimple","array","newNode","removeAt","setData","siguiente","node","size","ListaCircularDoble","setPrev","current","index","getPrev","position","JsonNodo","categoria","nombre","valores","JsonNodoPrioridad","JsonSalidaNodoPrioridad","prioridad","ListasEddComponent","route","idTipoLista","showMessage","listaEnlArray","velocidadAnimacion","rectangulosNodos","flechas","anchoNodo","anchoNodoHead","altoNodo","anchoFlecha","colorFondoCanvas","fileContent","setting","element","dynamicDownload","nativeElement","getContext","paramsSubscription","params","subscribe","tituloLista","lblBtnAgregar","lblBtnBorrar","listaEnlazada","cambiarPagina","listaEnlJSon","radioData","opcionOperar","opcionRepeticiones","esCarga","borrarCanvas","valorIndiceActualizar","valorNodoActualizar","height","drawBorder","beginPath","toArray","jsonNodoArray","toArrayJson","JSON","stringify","valorNodoInsertar","agregarNodo","valorInsertar","insertaValor","buscar","agregarAlInicio","agregarAlFinal","push","encolar","actualizarListaStr","pintarNodos","actualizar","borrarAlInicio","borrarAlFinal","pop","desencolar","nuevoNodo","tempNodo","primerNodo","animar","concat","posFlech","valorStrNodo","flecha1","flecha3","iniciarAnimacion","interval","clearInterval","requestId","cancelAnimationFrame","setInterval","tick","forEach","square","dibujarFlechas","requestAnimationFrame","soloPintar","fileList","file","fileReader","FileReader","self","onloadend","result","toString","readAsText","strCarga","console","log","strIntoObj","parse","animacion","repeticion","fakeValidateUserData","res","dyanmicDownloadByHtmlTag","fileName","text","arg","document","createElement","fileType","indexOf","setAttribute","encodeURIComponent","event","MouseEvent","dispatchEvent","selector","template","animations","Cola","ListasEddModule","imports","declarations","FlechaCompuesta","posicionFlecha","lines","routes","path","component","ListasEddRoutingModule","forChild","exports","NodoSimple","ColaPrioridad","colaPrioridad","getPrioridad","setPrioridad","flag","ListaSimpleEnlazada","estaVacia","agregarEnIndice","j","temp","borrarEnIndice","cb","list","ListaDobleEnlazada"],"mappings":"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","file":"estructuras-lineales-listas-edd-module-es5.js","sourcesContent":["export class RectanguloNodo {\r\n    private colorRelleno = 'black';\r\n    private colorBorde = 'white';\r\n    private colorTexto = 'white';\r\n    private estiloTexto = 'bold 16px Verdana';\r\n    private anchoRectangulo=3;\r\n    public xCola=0;\r\n    public yCola=0;\r\n    public xHead=0;\r\n    public xFinal=0;\r\n    public yFinal=0;\r\n    public xInicial=0;\r\n    public yInicial=0;\r\n  \r\n    constructor(private ctx: CanvasRenderingContext2D,private texto:string, private x:number,\r\n        private y:number, private ancho:number, private alto:number,\r\n        private esDoble:boolean, private banderaAnimar:boolean) { \r\n            this.calcularCoords();\r\n            this.draw(); \r\n        }\r\n    getTexto(){\r\n        return this.texto;\r\n    }\r\n\r\n    private draw() {\r\n        if(this.texto==undefined) this.texto='1';\r\n        this.ctx.fillStyle = this.colorBorde;\r\n        this.ctx.fillRect(this.xInicial, this.yInicial, this.ancho, this.alto);\r\n        this.ctx.fillStyle = this.colorRelleno;\r\n        this.ctx.fillRect(this.xInicial+this.anchoRectangulo, this.yInicial+this.anchoRectangulo, this.ancho-this.anchoRectangulo*2, this.alto-this.anchoRectangulo*2);\r\n        this.ctx.fillStyle = this.colorBorde;\r\n        this.ctx.fillRect( this.xInicial+this.ancho-20, this.yInicial, this.anchoRectangulo, this.alto);\r\n        if(this.esDoble){\r\n            this.ctx.fillRect( this.xInicial+20, this.yInicial, this.anchoRectangulo, this.alto);\r\n        }\r\n        this.drawText();\r\n    }\r\n    public drawText(){\r\n        this.ctx.fillStyle = this.colorTexto;\r\n        this.ctx.textAlign = \"center\";\r\n        this.ctx.font = this.estiloTexto;\r\n        var sumaX=0;\r\n        if(this.texto.length<=3) sumaX=this.ancho/4;\r\n        else sumaX=this.ancho/2;\r\n        if(this.esDoble){\r\n            this.ctx.fillText( this.texto, this.xInicial+this.ancho/2, this.yInicial+23);\r\n        }else{\r\n            this.ctx.fillText( this.texto, this.xInicial+this.ancho/3, this.yInicial+23);\r\n        }\r\n    }\r\n\r\n    private calcularCoords(){\r\n        this.xFinal=10+(this.ancho * this.x);\r\n        this.yFinal=(this.alto * this.y);\r\n        this.yCola =this.alto *this.y+15;\r\n        this.xCola = this.xFinal+this.ancho-10;\r\n        this.xHead= this.xFinal+15;     \r\n        this.xInicial = this.ctx.canvas.width/2;\r\n        this.yInicial = 20;\r\n        if(this.banderaAnimar==false){\r\n            this.xInicial = this.xFinal;\r\n            this.yInicial = this.yFinal;\r\n        }\r\n    }\r\n\r\n    animar(){\r\n        if(this.xInicial<this.xFinal) this.xInicial+=1;\r\n        else if(this.xInicial>this.xFinal) this.xInicial-=1;\r\n        if(this.yInicial<this.yFinal) this.yInicial+=1;\r\n        else if(this.yInicial>this.yFinal) this.yInicial-=1;\r\n        this.draw();\r\n    }\r\n  }\r\n  ","import NodoSimple from \"./nodo-simple\";\r\nimport ListaPadre from \"./lista-padre\";\r\n\r\nexport default class Pila implements ListaPadre {\r\n  inicio: NodoSimple;\r\n  longitud:number;\r\n\r\n  constructor(){\r\n    this.longitud = 0;\r\n  }\r\n  estaVacia(): boolean {\r\n    return this.longitud == 0;\r\n  }\r\n  toArray(): any[] {\r\n    const colaArray = new Array(this.longitud);\r\n    let aux=this.inicio;\r\n    let i=0;\r\n    while(i<this.longitud){\r\n      colaArray[i]=aux.getData();\r\n      i++;\r\n      aux=aux.getNext();\r\n    }\r\n    return colaArray;\r\n  }\r\n  size(): number {\r\n    return this.longitud;\r\n  }\r\n  push(data: any): void {\r\n    let nuevo=new NodoSimple(data);\r\n    if(this.longitud==0){\r\n      this.inicio=nuevo;\r\n    }else{\r\n        let aux=this.inicio;\r\n        while(aux.getNext()!=null){\r\n          aux=aux.getNext();\r\n        }\r\n        aux.setNext(nuevo);\r\n    }\r\n    this.longitud++;\r\n  }\r\n  pop(): any {\r\n    let nodo=null;\r\n    if(this.longitud>0){\r\n      if(this.longitud==1){\r\n        this.inicio=null;\r\n      }else{\r\n        let aux=this.inicio;\r\n        let previo=this.inicio;\r\n        while(aux.getNext()!=null){\r\n          previo=aux;\r\n          aux=aux.getNext();\r\n        }\r\n        previo.setNext(null);\r\n      }\r\n      this.longitud--;\r\n    }\r\n    return nodo;\r\n  }\r\n  buscar(valor):boolean{\r\n    let existeValor=false;\r\n    let aux=this.inicio;\r\n    while(aux!=null&&!existeValor){\r\n      if(aux.getData()==valor){\r\n        return true;\r\n      }\r\n      aux=aux.getNext();\r\n    }\r\n    return existeValor;\r\n  }\r\n  peek() {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n  agregarAlInicio(data: any): void {\r\n      throw new Error(\"Method not implemented.\");\r\n  }\r\n  agregarAlFinal(data: any): void {\r\n      throw new Error(\"Method not implemented.\");\r\n  }\r\n  borrarAlInicio() {\r\n      throw new Error(\"Method not implemented.\");\r\n  }\r\n  borrarAlFinal() {\r\n      throw new Error(\"Method not implemented.\");\r\n  }\r\n  actualizar(posicion, newData){\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n}","export default class NodoDoble {\r\n    private data: any;\r\n    private next: NodoDoble;\r\n    private prev: NodoDoble;\r\n\r\n    constructor(data: any) {\r\n      this.data = data;\r\n      this.next = null;\r\n      this.prev = null;\r\n    }\r\n    public getNext(): NodoDoble {\r\n      return this.next;\r\n    }\r\n    public getPrev(): NodoDoble {\r\n        return this.prev;\r\n      }\r\n    public getData(): any {\r\n      return this.data;\r\n    }\r\n    public setNext(next: NodoDoble): void {\r\n      this.next = next;\r\n    }\r\n    public setPrev(prev: NodoDoble): void {\r\n        this.prev = prev;\r\n      }\r\n    public setData(data: any): void {\r\n      this.data = data;\r\n    }\r\n}","export class Flecha{\r\n    x1=20;x2=100;y1=10;y2=50;\r\n    constructor(private ctx: CanvasRenderingContext2D,\r\n        private fromx:number, private fromy:number, \r\n        private tox:number, private toy:number,\r\n        private anchoLinea:number, private colorFlecha:string,\r\n        private esBidireccional:boolean) { \r\n            this.canvas_arrow();\r\n        }\r\n\r\n    canvas_arrow() {\r\n        var headlen = 10; // length of head in pixels\r\n        var dx = this.x2 - this.x1;\r\n        var dy = this.y2 - this.y1;\r\n        var angle = Math.atan2(dy, dx);\r\n        this.ctx.moveTo(this.x1, this.y1);\r\n        if(this.esBidireccional){\r\n            this.ctx.lineTo(this.x1 + headlen * Math.cos(angle - Math.PI / 6), this.y1 - headlen * Math.sin(angle - Math.PI / 6));\r\n            this.ctx.moveTo(this.x1, this.y1);\r\n            this.ctx.lineTo(this.x1 + headlen * Math.cos(angle + Math.PI / 6), this.y1 - headlen * Math.sin(angle + Math.PI / 6));\r\n            this.ctx.moveTo(this.x1, this.y1);}\r\n        this.ctx.lineTo(this.x2, this.y2);\r\n        this.ctx.lineTo(this.x2 - headlen * Math.cos(angle - Math.PI / 6), this.y2 - headlen * Math.sin(angle - Math.PI / 6));\r\n        this.ctx.moveTo(this.x2, this.y2);\r\n        this.ctx.lineTo(this.x2 - headlen * Math.cos(angle + Math.PI / 6), this.y2 - headlen * Math.sin(angle + Math.PI / 6));\r\n        this.ctx.strokeStyle  = this.colorFlecha;\r\n        this.ctx.lineWidth  = this.anchoLinea;\r\n        this.ctx.stroke();\r\n      }\r\n    animar(){\r\n        if(this.x1<this.fromx) this.x1++;\r\n        if(this.x1>this.fromx) this.x1--;\r\n        if(this.x2<this.tox) this.x2++;\r\n        if(this.x2>this.tox) this.x2--;\r\n        if(this.y1<this.fromy) this.y1++;\r\n        if(this.y1>this.fromy) this.y1--;\r\n        if(this.y2<this.toy) this.y2++;\r\n        if(this.y2>this.toy) this.y2--;\r\n        this.canvas_arrow();\r\n    }\r\n    soloPintar(){\r\n        this.x1=this.fromx; this.x2=this.tox;\r\n        this.y1=this.fromy; this.y2=this.toy;\r\n        this.canvas_arrow();\r\n    }\r\n  }","import NodoSimple from \"./nodo-simple\";\r\nimport ListaPadre from \"./lista-padre\";     \r\nexport default class ListaCircularSimple implements ListaPadre {\r\n    inicio: NodoSimple;\r\n    final:NodoSimple;\r\n    longitud:number;\r\n    constructor() {\r\n        this.inicio = null;\r\n        this.final=null;\r\n        this.longitud=0;\r\n      }\r\n    estaVacia(): boolean {\r\n        return this.longitud==0;\r\n    }\r\n    toArray(): any[] {\r\n        const array = new Array(this.longitud);\r\n        let aux = this.inicio;\r\n                // Recorre la lista hasta lleger al nodo anterior al eliminar.\r\n                for (let i = 0; i < this.longitud; i++) {\r\n                    array[i] = aux.getData();\r\n                    aux = aux.getNext();\r\n                }\r\n                return array;\r\n    }\r\n    size(): number {\r\n        return this.longitud;\r\n    }\r\n    agregarAlInicio(data: any): void {\r\n        if(data){\r\n            let newNode = new NodoSimple(data)\r\n            if (this.longitud == 0) {\r\n                this.final = newNode\r\n                this.inicio = newNode \r\n                this.final.setNext(this.inicio)\r\n            }else {\r\n                newNode.setNext ( this.inicio );\r\n                this.inicio = newNode\r\n                this.final.setNext(this.inicio)\r\n            }\r\n            this.longitud += 1\r\n        }\r\n    }\r\n    agregarAlFinal(data: any): void {\r\n        if(data){\r\n            let newNode = new NodoSimple(data)\r\n            if (this.longitud == 0) {\r\n                this.final = newNode\r\n                this.inicio = newNode \r\n            }else {\r\n                this.final.setNext( newNode);\r\n                this.final = newNode\r\n                this.final.setNext(this.inicio)\r\n            }\r\n            this.longitud += 1\r\n        }\r\n    }\r\n    borrarAlInicio() {\r\n        this.removeAt(0);\r\n    }\r\n    borrarAlFinal() {\r\n        this.removeAt(this.longitud);\r\n    }\r\n    push(data: any): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    pop() {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    actualizar(posicion, newData){\r\n        // Verifica si la posición ingresada se encuentre en el rango\r\n        // >= 0 y < que el numero de elementos del la lista.\r\n        if(posicion>=0 && posicion<this.longitud){\r\n            // Consulta si el nodo a eliminar es el primero.\r\n            if(posicion == 0){\r\n                // Alctualiza el valor delprimer nodo.\r\n                this.inicio.setData(newData);\r\n            }\r\n            else{\r\n                // En caso que el nodo a eliminar este por el medio \r\n                // o sea el ultimo\r\n                let aux = this.inicio;\r\n                // Recorre la lista hasta lleger al nodo anterior al eliminar.\r\n                for (let i = 0; i < posicion; i++) {\r\n                    aux = aux.getNext();\r\n                }\r\n                // Alctualiza el valor del nodo.\r\n                aux.setData(newData);\r\n            }\r\n        }\r\n    }\r\n    removeAt( posicion ){\r\n        if(posicion>=0 && posicion<this.longitud){\r\n            // Consulta si el nodo a eliminar es el primero\r\n            if(posicion == 0){\r\n                // Elimina el primer nodo apuntando al siguinte.\r\n                this.inicio = this.inicio.getNext();\r\n                // Apuntamos con el ultimo nodo de la lista al inicio.\r\n                this.final.setNext(this.inicio);\r\n            }\r\n            // En caso que el nodo a eliminar este por el medio \r\n            // o sea el ultimo\r\n            else{\r\n                // Crea una copia de la lista.\r\n                let aux = this.inicio;\r\n                // Recorre la lista hasta lleger al nodo anterior al eliminar.\r\n                for (let i = 0; i < posicion-1; i++) {\r\n                    aux = aux.getNext();\r\n                }\r\n                if (aux.getNext() == this.final) {\r\n                    aux.setNext(this.inicio);\r\n                    this.final = aux;\r\n                } else {\r\n                    // Guarda el nodo siguiente del nodo a eliminar.\r\n                    let siguiente = aux.getNext();\r\n                    // Enlaza el nodo anterior al de eliminar con el \r\n                    // sguiente despues de el.\r\n                    aux.setNext(siguiente.getNext ());  \r\n                    // Actualizamos el puntero del ultimo nodo\r\n                }\r\n            }\r\n            // Disminuye el contador de tamaño de la lista.\r\n            this.longitud--;\r\n        }\r\n    }\r\n    buscar(valor):boolean{\r\n      let existeValor=false;\r\n      let node = this.inicio;\r\n      for (let i = 0; i < this.size(); i++) {\r\n        if(valor== node.getData()){\r\n          existeValor=true; break;\r\n        }\r\n        node = node.getNext();\r\n      }\r\n      return existeValor;\r\n    }\r\n}","import NodoDoble from \"./nodo-doble\";\r\nimport ListaPadre from \"./lista-padre\";     \r\nexport default class ListaCircularDoble implements ListaPadre {\r\n    inicio: NodoDoble;\r\n    final:NodoDoble;\r\n    longitud:number;\r\n    constructor() {\r\n        this.inicio = null;\r\n        this.final=null;\r\n        this.longitud=0;\r\n      }\r\n    estaVacia(): boolean {\r\n        return this.longitud==0;\r\n    }\r\n    toArray(): any[] {\r\n      const array = new Array(this.longitud);\r\n      let node = this.inicio;\r\n      // 2. Avanza sucesivamente, obtén cada nodo\r\n      for (let i = 0; i < array.length; i++) {\r\n        array[i] = node.getData();\r\n        node = node.getNext();\r\n      }\r\n      return array;\r\n    }\r\n    size(): number {\r\n        return this.longitud;\r\n    }\r\n    agregarAlInicio(data: any): void {\r\n        if(data){\r\n            let newNode = new NodoDoble(data)\r\n            if (this.longitud == 0) {\r\n                this.final = newNode\r\n                this.inicio = newNode \r\n            }else {\r\n                newNode.setNext ( this.inicio );\r\n                this.inicio.setPrev(newNode);\r\n                this.inicio = newNode;\r\n            }\r\n            this.longitud += 1;\r\n        }\r\n    }\r\n    agregarAlFinal(data: any): void {\r\n        if(data){\r\n            let newNode = new NodoDoble(data)\r\n            if (this.longitud == 0) {\r\n                this.final = newNode\r\n                this.inicio = newNode \r\n            }else {\r\n                newNode.setPrev ( this.final );\r\n                this.final.setNext( newNode);\r\n                this.final = newNode\r\n            }\r\n            this.longitud += 1\r\n        }\r\n    }\r\n    borrarAlInicio() {\r\n        this.removeAt(0);\r\n    }\r\n    borrarAlFinal() {\r\n        this.removeAt(this.longitud);\r\n    }\r\n    push(data: any): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    pop() {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    actualizar(posicion, newData){\r\n        if (posicion < 0 || posicion >= this.longitud) {\r\n          return false\r\n        }\r\n        let current = this.inicio\r\n        let index = 0\r\n        if (this.longitud / 2 > posicion) {\r\n          while(index++ < posicion){\r\n          current = current.getNext();\r\n        }\r\n        }else{\r\n          current = this.final\r\n          index = this.longitud - 1\r\n          while (index -- > posicion) {\r\n            current = current.getPrev();\r\n          }\r\n        }\r\n        current.setData ( newData);\r\n    }\r\n    removeAt( position ){\r\n        // 1. Juicio fuera de límites\r\n        if (position < 0 || position >= this.longitud) {\r\n          return null\r\n        }\r\n        // 2. Eliminar nodo\r\n        // Cuando length == 1 en la lista enlazada\r\n        // Caso 1: solo hay un nodo en la lista vinculada\r\n        let current = this.inicio// Defina en la parte superior para facilitar las siguientes situaciones para devolver current.data\r\n        if (this.longitud == 1) {\r\n          this.inicio = null\r\n          this.final = null\r\n        // Cuando longitud> 1 en la lista enlazada\r\n        } else{\r\n          // Escenario 2: Eliminar el primer nodo\r\n          if (position == 0) {\r\n            this.inicio.getNext().setPrev(null)\r\n            this.inicio = this.inicio.getNext()\r\n          // Caso 3: Eliminar el último nodo\r\n          }else if(position == this.longitud - 1){\r\n            current = this.final// Volver al último nodo eliminado en este caso\r\n            this.final.getPrev().setNext(null)\r\n            this.final = this.final.getPrev()\r\n          }else{\r\n          // Caso 4: Elimina el nodo en el medio de la lista vinculada\r\n            let index = 0\r\n            while(index++ < position){\r\n              current = current.getNext()\r\n            }\r\n            current.getNext().setPrev(current.getPrev())\r\n            current.getPrev().setNext(current.getNext())\r\n          }\r\n        }\r\n        this.longitud -= 1\r\n      }\r\n      buscar(valor):boolean{\r\n        let existeValor=false;\r\n        let node = this.inicio;\r\n        for (let i = 0; i < this.size(); i++) {\r\n          if(valor== node.getData()){\r\n            existeValor=true; break;\r\n          }\r\n          node = node.getNext();\r\n        }\r\n        return existeValor;\r\n      }\r\n}","export class JsonNodo\r\n{\r\n    constructor(public categoria:string,\r\n        public nombre:string,\r\n        public valores:string[]) {}\r\n}\r\nexport class JsonNodoPrioridad\r\n{\r\n    constructor(public categoria:string,\r\n        public nombre:string,\r\n        public valores:any[]) {}\r\n}\r\nexport class JsonSalidaNodoPrioridad{\r\n    constructor(public valor:any,public prioridad: number) {} \r\n  }\r\n","import { Component, OnInit, ViewChild, ElementRef, NgZone } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport ListaSimpleEnlazada from './impl-estructuras/lista-simple-enlaz';\r\nimport ListaPadre from './impl-estructuras/lista-padre';\r\nimport Pila from './impl-estructuras/pila';\r\nimport Cola from './impl-estructuras/cola';\r\nimport ListaDobleEnlazada from './impl-estructuras/lista-doble-enlaz';\r\nimport ListaCircularSimple from './impl-estructuras/lista-circular-simple';\r\nimport ListaCircularDoble from './impl-estructuras/lista-circular-doble';\r\nimport { routerTransition } from '../../router.animations';\r\nimport { RectanguloNodo} from './impl-canvas/rectangulo-nodo';\r\nimport {Flecha} from './impl-canvas/flecha';\r\nimport { of, Subscription } from 'rxjs';\r\nimport {JsonNodo,JsonNodoPrioridad,JsonSalidaNodoPrioridad} from './impl-estructuras/json-nodo';\r\nimport {FlechaCompuesta} from './impl-canvas/flecha-compuesta';\r\nimport ColaPrioridad from './impl-estructuras/cola-prioridad';\r\n\r\n@Component({\r\n  selector: 'app-listas-edd',\r\n  templateUrl: './listas-edd.component.html',\r\n  styleUrls: ['./listas-edd.component.css'],\r\n    animations: [routerTransition()]\r\n})\r\nexport class ListasEddComponent implements OnInit {\r\n  paramsSubscription: Subscription;\r\n  public idTipoLista=0;\r\n  public showMessage=false;\r\n  listaEnlArray:string[]=[];\r\n  listaEnlJSon:string;\r\n  listaEnlazada:any;\r\n  velocidadAnimacion=10;\r\n  public radioData: any; \r\n  opcionOperar: string;\r\n  valorNodoInsertar:string;\r\n  valorIndiceActualizar:string;\r\n  valorNodoActualizar:string;\r\n  prioridad:string; \r\n  @ViewChild('canvas', { static: true }) canvas: ElementRef<HTMLCanvasElement>;\r\n  ctx: CanvasRenderingContext2D;\r\n  requestId;\r\n  interval;\r\n  rectangulosNodos: RectanguloNodo[] = [];\r\n  flechas: any[]=[];\r\n  private anchoNodo=180;\r\n  private anchoNodoHead=100;\r\n  private altoNodo=30;\r\n  private anchoFlecha=2;\r\n  private colorFlecha='cyan';\r\n  tituloLista:string;\r\n  lblBtnAgregar:string;\r\n  lblBtnBorrar:string;\r\n  strCarga:string;\r\n  colorFondoCanvas='black';\r\n  opcionRepeticiones: string;\r\n  esCarga:boolean;\r\n \r\n\r\n  //constructor(private ngZone: NgZone) { }\r\n  constructor(private route: ActivatedRoute) {}\r\n\r\n  ngOnInit(): void {\r\n    this.ctx = this.canvas.nativeElement.getContext('2d');\r\n    this.paramsSubscription = this.route.params.subscribe(params => {\r\n      this.idTipoLista = +params['idTipoLista'];\r\n      switch(this.idTipoLista){\r\n        case 1:this.tituloLista=\"Lista simple enlazada\"; this.lblBtnAgregar=\"Agregar\";\r\n                this.lblBtnBorrar=\"Borrar\"; this.listaEnlazada = new ListaSimpleEnlazada();\r\n                this.cambiarPagina();\r\n                break; \r\n        case 2:this.tituloLista=\"Lista doble enlazada\"; this.lblBtnAgregar=\"Agregar\";\r\n                this.lblBtnBorrar=\"Borrar\"; this.listaEnlazada = new ListaDobleEnlazada();\r\n                this.cambiarPagina();\r\n                break; \r\n        case 3:this.tituloLista=\"Lista circular simplemente enlazada\"; this.lblBtnAgregar=\"Agregar\";\r\n                this.lblBtnBorrar=\"Borrar\"; this.listaEnlazada = new ListaCircularSimple();\r\n                this.cambiarPagina();\r\n                break; \r\n        case 4:this.tituloLista=\"Lista circular doblemente enlazada\";this.lblBtnAgregar=\"Agregar\";\r\n                this.lblBtnBorrar=\"Borrar\"; this.listaEnlazada = new ListaCircularDoble();\r\n                this.cambiarPagina();\r\n                break; \r\n        case 5:this.tituloLista=\"Pila\"; this.lblBtnAgregar=\"Push\";\r\n                this.lblBtnBorrar=\"Pop\"; this.listaEnlazada = new Pila();\r\n                this.cambiarPagina();\r\n                break; \r\n        case 6:this.tituloLista=\"Cola\"; this.lblBtnAgregar=\"Encolar\";\r\n                this.lblBtnBorrar=\"Descencolar\"; this.listaEnlazada = new Cola();\r\n                this.cambiarPagina();\r\n                break; \r\n        case 7:this.tituloLista=\"Cola Prioridad\"; this.lblBtnAgregar=\"Encolar\";\r\n                this.lblBtnBorrar=\"Descencolar\"; this.listaEnlazada = new ColaPrioridad();\r\n                this.cambiarPagina();\r\n                break; \r\n      }\r\n    });\r\n    this.listaEnlJSon=\"\";\r\n    this.radioData = 1;\r\n    this.opcionOperar='Inicio';\r\n    this.opcionRepeticiones=\"true\";\r\n    this.esCarga=false;\r\n  }\r\n  cambiarPagina(){\r\n    this.borrarCanvas();\r\n    this.rectangulosNodos=[];\r\n    this.flechas=[];\r\n    this.listaEnlJSon='';\r\n    this.valorIndiceActualizar='';\r\n    this.valorNodoActualizar='';\r\n    this.showMessage=false;\r\n    this.opcionRepeticiones=\"true\";\r\n  }\r\n  borrarCanvas(){\r\n    this.ctx.fillStyle = this.colorFondoCanvas;\r\n    this.ctx.fillRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\r\n    this.drawBorder()\r\n    this.ctx.beginPath();\r\n  }\r\n  actualizarListaStr(){\r\n    this.listaEnlArray = this.listaEnlazada.toArray();\r\n    let i =0;\r\n    if(this.idTipoLista==7){\r\n      let jsonNodoArray= new JsonNodoPrioridad(\"Estructura Lineal\",this.tituloLista,this.listaEnlazada.toArrayJson());\r\n      this.listaEnlJSon = JSON.stringify(jsonNodoArray);\r\n    }else{\r\n      let jsonNodoArray= new JsonNodo(\"Estructura Lineal\",this.tituloLista,this.listaEnlArray);\r\n      this.listaEnlJSon = JSON.stringify(jsonNodoArray);\r\n    }\r\n  }\r\n  clickAgregarNodo() {\r\n    if(this.valorNodoInsertar!=null && this.valorNodoInsertar!=''){\r\n      this.agregarNodo(this.valorNodoInsertar, false);\r\n      this.valorNodoInsertar=''; this.prioridad='';\r\n    }\r\n  }\r\n  agregarNodo(valorInsertar:string, esCarga:boolean){\r\n    let insertaValor=true;\r\n    this.showMessage=false;\r\n    //Si no es pila o cola, aplica si inserta al inicio o final\r\n    if(this.idTipoLista>=1&&this.idTipoLista<=4){\r\n      if(this.opcionRepeticiones==\"false\"){\r\n        if(this.listaEnlazada.buscar(valorInsertar)){\r\n          this.showMessage=true;\r\n          insertaValor=false;         }       }\r\n      if(insertaValor){ \r\n        if(this.opcionOperar=='Inicio'){\r\n          this.listaEnlazada.agregarAlInicio(valorInsertar);\r\n        }\r\n        else{\r\n          this.listaEnlazada.agregarAlFinal(valorInsertar);\r\n        }\r\n      }\r\n    } //pila\r\n    else if(this.idTipoLista==5){\r\n      if(this.opcionRepeticiones==\"false\"){\r\n        if(this.listaEnlazada.buscar(valorInsertar)){\r\n          this.showMessage=true;\r\n          insertaValor=false;         }       }\r\n        if(insertaValor) this.listaEnlazada.push(valorInsertar);\r\n    } //cola\r\n    else if(this.idTipoLista==6){\r\n      if(this.opcionRepeticiones==\"false\"){\r\n        if(this.listaEnlazada.buscar(valorInsertar)){\r\n          this.showMessage=true;\r\n          insertaValor=false;         }       }\r\n      if(insertaValor) this.listaEnlazada.encolar(valorInsertar, this.opcionRepeticiones==\"true\");\r\n    } //cola prioridad\r\n    else if(this.idTipoLista==7){\r\n      if(this.opcionRepeticiones==\"false\"){\r\n        if(this.listaEnlazada.buscar(valorInsertar)){\r\n          this.showMessage=true;\r\n          insertaValor=false;         }       }\r\n      if(this.prioridad!=null&&this.prioridad!=''&&insertaValor)\r\n        this.listaEnlazada.encolar(valorInsertar,this.prioridad);\r\n    }\r\n    this.actualizarListaStr();\r\n    if(!esCarga&&insertaValor) this.pintarNodos();\r\n  }\r\n  clickActualizarNodo(){\r\n    this.listaEnlazada.actualizar(this.valorIndiceActualizar, this.valorNodoActualizar);\r\n    this.actualizarListaStr();\r\n    this.pintarNodos();\r\n  }\r\n  clickBorrarNodo(){\r\n    //Si no es pila o cola, aplica borrar al inicio o final\r\n    if(this.idTipoLista>=1&&this.idTipoLista<=4){\r\n      if(this.opcionOperar=='Inicio'){\r\n        this.listaEnlazada.borrarAlInicio();\r\n      }\r\n      else{ \r\n        this.listaEnlazada.borrarAlFinal();\r\n      }\r\n    }else if(this.idTipoLista==5){\r\n      this.listaEnlazada.pop();\r\n    }else{\r\n      this.listaEnlazada.desencolar();\r\n    }\r\n    this.actualizarListaStr();\r\n    this.rectangulosNodos=[];\r\n    this.flechas=[];\r\n    this.pintarNodos();\r\n  }\r\n  \r\n  /*Se borra canvas, se recorre lista dinamica pintando los nodos y flechas*/ \r\n  pintarNodos(){\r\n    this.borrarCanvas();\r\n    let x=0,y=1,i=1;\r\n    let nuevoNodo,tempNodo, primerNodo;\r\n    let animar=true;\r\n    this.flechas=[];\r\n    //console.log('lenght:'+this.rectangulosNodos.length)\r\n    if(this.rectangulosNodos.length>0) animar=false;\r\n    nuevoNodo= new RectanguloNodo(this.ctx, 'Inicio',x,y,this.anchoNodoHead,this.altoNodo,false,animar);\r\n    this.rectangulosNodos = this.rectangulosNodos.concat(nuevoNodo);\r\n    y=3; let posFlech='arriba';\r\n    for (let valorStrNodo of this.listaEnlArray) {\r\n      tempNodo=nuevoNodo;\r\n      if(i==this.listaEnlArray.length) animar = true;\r\n      else animar = false;\r\n      nuevoNodo= new RectanguloNodo(this.ctx, valorStrNodo, x,y,this.anchoNodo,this.altoNodo,\r\n        this.idTipoLista==2||this.idTipoLista==4,animar);\r\n        this.rectangulosNodos = this.rectangulosNodos.concat(nuevoNodo);\r\n      if(i==1) primerNodo=nuevoNodo;\r\n      if(tempNodo!=null&&nuevoNodo!=null){\r\n        let flecha1= new Flecha(this.ctx,  tempNodo.xCola, tempNodo.yCola, nuevoNodo.xHead,\r\n           nuevoNodo.yCola,this.anchoFlecha, this.colorFlecha,this.idTipoLista==2||this.idTipoLista==4);\r\n        this.flechas = this.flechas.concat( flecha1 );\r\n        //flecha desde el último nodo hacia primer nodo\r\n        if((this.idTipoLista==4)&&i==this.listaEnlArray.length&&i>1){\r\n          if(y==3){\r\n            let flecha3= new FlechaCompuesta(this.ctx, nuevoNodo.xCola, nuevoNodo.yCola, primerNodo.xHead+20,\r\n            primerNodo.yCola,this.anchoFlecha, this.colorFlecha,posFlech);\r\n            this.flechas = this.flechas.concat( flecha3 );\r\n          }else{\r\n            let flecha3= new Flecha(this.ctx, nuevoNodo.xCola, nuevoNodo.yCola, primerNodo.xHead+20,\r\n              primerNodo.yCola,this.anchoFlecha, this.colorFlecha,false);\r\n              this.flechas = this.flechas.concat( flecha3 );\r\n          }\r\n        }\r\n        tempNodo.drawText(); nuevoNodo.drawText();\r\n      }\r\n      x+=1.5;\r\n      if(x*this.anchoNodo>=this.ctx.canvas.width-100){\r\n        y+=2; x=0;\r\n      }\r\n      i++;\r\n    }\r\n    if(this.esCarga==false){\r\n      this.iniciarAnimacion();\r\n    }\r\n  }\r\n  iniciarAnimacion(){\r\n    if (this.interval != undefined){\r\n      clearInterval(this.interval);\r\n    } \r\n    if(this.requestId!=undefined) cancelAnimationFrame(this.requestId);\r\n    this.interval = setInterval(() => {\r\n      this.borrarCanvas();\r\n      this.tick();      \r\n    }, 10 - this.velocidadAnimacion);\r\n  }\r\n  tick() {\r\n    this.borrarCanvas();\r\n    this.rectangulosNodos.forEach((square: RectanguloNodo) => {\r\n      square.animar();\r\n    });\r\n    this.dibujarFlechas();\r\n    this.requestId = requestAnimationFrame(() => this.tick);\r\n  }\r\n  dibujarFlechas(){\r\n    if(this.idTipoLista>=1&&this.idTipoLista<=4){\r\n      for(let i=this.flechas.length-1;i>=0;i--){\r\n        if(i==0) {\r\n          this.flechas[i].animar();\r\n        } else{\r\n          this.flechas[i].soloPintar();\r\n        }\r\n      }\r\n    }else{\r\n      for(let i=0;i<this.flechas.length;i++){\r\n        if(i==this.flechas.length-1) {\r\n          this.flechas[i].animar();\r\n        } else{\r\n          this.flechas[i].soloPintar();\r\n        }\r\n      }\r\n    }\r\n    this.ctx.stroke();\r\n  }\r\n\r\n  drawBorder() {\r\n    this.ctx.beginPath();\r\n    this.ctx.moveTo(0, 0);\r\n    this.ctx.lineTo(this.ctx.canvas.width, 0);\r\n    this.ctx.lineTo(this.ctx.canvas.width, this.ctx.canvas.height);\r\n    this.ctx.lineTo(0, this.ctx.canvas.height);\r\n    this.ctx.lineTo(0, 0);\r\n    this.ctx.strokeStyle= this.colorFlecha;\r\n    this.ctx.stroke();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    clearInterval(this.interval);\r\n    cancelAnimationFrame(this.requestId);\r\n  }\r\n  fileContent: string = '';\r\n\r\n  public cargarArchivo(fileList: FileList): void {\r\n    let file = fileList[0];\r\n    let fileReader: FileReader = new FileReader();\r\n    let self = this;\r\n    fileReader.onloadend = function(x) {\r\n      self.fileContent = fileReader.result.toString();\r\n    }\r\n    fileReader.readAsText(file);\r\n    this.strCarga=self.fileContent;\r\n  }\r\n  \r\n  clickCargar(){\r\n    this.strCarga=this.fileContent;\r\n    console.log(this.strCarga);\r\n    if(this.strCarga!=null&&this.strCarga!=undefined&&this.strCarga.length>0){ \r\n      let strIntoObj = JSON.parse(this.strCarga);\r\n      console.log(strIntoObj);\r\n      if(strIntoObj.animacion!=undefined&&strIntoObj.animacion!=null){\r\n        this.velocidadAnimacion=strIntoObj.animacion;\r\n      }\r\n      if(strIntoObj.repeticion!=undefined){\r\n        this.opcionRepeticiones=strIntoObj.repeticion;\r\n      }\r\n      if(strIntoObj.posicion!=undefined){\r\n        if(strIntoObj.posicion=='Inicio'||strIntoObj.posicion=='Fin')\r\n          this.opcionOperar=strIntoObj.posicion;\r\n      }\r\n      for (let valorStrNodo of strIntoObj.valores) {\r\n        if(this.idTipoLista==7){\r\n          this.prioridad=valorStrNodo.prioridad;\r\n          this.agregarNodo(valorStrNodo.valor,true);\r\n        } \r\n        else this.agregarNodo(valorStrNodo,true);\r\n      }\r\n      this.esCarga=true;\r\n      this.pintarNodos();\r\n      this.iniciarAnimacion();\r\n    }\r\n  }\r\n\r\n  private setting = {\r\n    element: {\r\n      dynamicDownload: null as HTMLElement\r\n    }\r\n  }\r\n  downloadJson() {\r\n    this.fakeValidateUserData().subscribe((res) => {\r\n      this.dyanmicDownloadByHtmlTag({\r\n        fileName: this.tituloLista+'.json',\r\n        text: res\r\n      });\r\n    });\r\n  }\r\n  fakeValidateUserData() {\r\n    return of(this.listaEnlJSon);\r\n  }\r\n  private dyanmicDownloadByHtmlTag(arg: {\r\n    fileName: string,\r\n    text: string\r\n    }) {\r\n      if (!this.setting.element.dynamicDownload) {\r\n        this.setting.element.dynamicDownload = document.createElement('a');\r\n      }\r\n      const element = this.setting.element.dynamicDownload;\r\n      const fileType = arg.fileName.indexOf('.json') > -1 ? 'text/json' : 'text/plain';\r\n      element.setAttribute('href', `data:${fileType};charset=utf-8,${encodeURIComponent(arg.text)}`);\r\n      element.setAttribute('download', arg.fileName);\r\n      var event = new MouseEvent(\"click\");\r\n      element.dispatchEvent(event);\r\n    }\r\n  \r\n}\r\n\r\n","import NodoSimple from \"./nodo-simple\";\r\n\r\nexport default class Cola {\r\n  inicio: NodoSimple;\r\n  longitud:number;\r\n\r\n  constructor(){\r\n    this.longitud = 0;\r\n  }\r\n  estaVacia(): boolean {\r\n    return this.longitud == 0;\r\n  }\r\n  toArray(): any[] {\r\n    const colaArray = new Array(this.longitud);\r\n    let aux=this.inicio;\r\n    let i=0;\r\n    while(aux!=null){\r\n      colaArray[i]=aux.getData();\r\n      i++;\r\n      aux=aux.getNext();\r\n    }\r\n    return colaArray;\r\n  }\r\n  size(): number {\r\n    return this.longitud;\r\n  }\r\n  encolar(data: any) {\r\n    let nuevo=new NodoSimple(data);\r\n    if(this.longitud==0){\r\n      this.inicio=nuevo;\r\n    }else{\r\n        let aux=this.inicio;\r\n        while(aux.getNext()!=null){\r\n          aux=aux.getNext();\r\n        }\r\n        aux.setNext(nuevo);\r\n    }\r\n    this.longitud++;    \r\n  }\r\n  desencolar(): any {\r\n    let nodo=null;\r\n    if(this.longitud>0){\r\n      nodo = this.inicio;\r\n      this.inicio=this.inicio.getNext();\r\n      this.longitud--;\r\n    }\r\n    return nodo;\r\n  }\r\n  buscar(valor):boolean{\r\n    let existeValor=false;\r\n    let aux=this.inicio;\r\n    while(aux!=null&&!existeValor){\r\n      if(aux.getData()==valor){\r\n        return true;\r\n      }\r\n      aux=aux.getNext();\r\n    }\r\n    return existeValor;\r\n  }\r\n}","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { PageHeaderModule } from '../../shared';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ListasEddRoutingModule } from './listas-edd-routing.module';\r\nimport { ListasEddComponent } from './listas-edd.component';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n\r\n@NgModule({\r\n    imports: [MatRadioModule,CommonModule, ListasEddRoutingModule, PageHeaderModule,FormsModule],\r\n    declarations: [ListasEddComponent]\r\n})\r\nexport class ListasEddModule {}\r\n","export class FlechaCompuesta{\r\n    x1=0;x2=0;y1=0;y2=0;\r\n    constructor(private ctx: CanvasRenderingContext2D,\r\n        private fromx:number, private fromy:number, \r\n        private tox:number, private toy:number,\r\n        private anchoLinea:number, private colorFlecha:string,\r\n        private posicionFlecha:string) { \r\n            this.x1=fromx;\r\n            this.x2=tox;\r\n            this.y1=fromy;\r\n            this.y1=toy;\r\n            fromx=50; fromy=100;\r\n            tox=50, fromy=100;\r\n            this.lines();\r\n            this.canvas_arrow();\r\n        }\r\n    animar(){\r\n        if(this.fromx<this.x1) this.fromx++;\r\n        else if(this.fromx>this.x1) this.fromx--;\r\n        if(this.tox<this.x2) this.tox++;\r\n        else if(this.tox>this.x2) this.tox--;\r\n        this.lines();\r\n        this.canvas_arrow();\r\n    }\r\n    soloPintar(){\r\n        this.fromx=this.x1; this.tox=this.x2;\r\n        this.fromy=this.y1; this.toy=this.y2;\r\n        this.lines();\r\n        this.canvas_arrow();\r\n    }\r\n    lines(){\r\n        if(this.posicionFlecha=='arriba'){\r\n            this.ctx.moveTo(this.fromx, this.fromy);\r\n            this.ctx.lineTo(this.fromx, this.fromy-20);\r\n            this.ctx.lineTo(this.tox, this.fromy-20);\r\n            this.ctx.lineTo(this.tox, this.fromy);\r\n        }else{\r\n            this.ctx.moveTo(this.fromx, this.fromy);\r\n            this.ctx.lineTo(this.fromx, this.fromy+20);\r\n            this.ctx.lineTo(this.tox, this.fromy+20);\r\n            this.ctx.lineTo(this.tox, this.fromy);\r\n        }\r\n    }\r\n    canvas_arrow() {\r\n        var dx = this.tox - this.fromx;\r\n        var dy = this.toy - this.fromy;\r\n        if(this.posicionFlecha=='arriba'){\r\n            this.ctx.moveTo(this.tox, this.toy);\r\n            this.ctx.lineTo(this.tox - 5, this.toy - 5);\r\n            this.ctx.moveTo(this.tox, this.toy);\r\n            this.ctx.lineTo(this.tox + 5, this.toy - 5);\r\n            this.ctx.strokeStyle  = this.colorFlecha;\r\n            this.ctx.lineWidth  = this.anchoLinea;\r\n            this.ctx.stroke();\r\n        }else{\r\n            this.ctx.moveTo(this.tox, this.toy);\r\n            this.ctx.lineTo(this.tox - 5, this.toy + 5);\r\n            this.ctx.moveTo(this.tox, this.toy);\r\n            this.ctx.lineTo(this.tox + 5, this.toy + 5);\r\n            this.ctx.strokeStyle  = this.colorFlecha;\r\n            this.ctx.lineWidth  = this.anchoLinea;\r\n            this.ctx.stroke();\r\n        }\r\n      }\r\n  }","export default \"<div [@routerTransition]>\\r\\n    <h4>{{tituloLista}}</h4>\\r\\n    <p *ngIf=\\\"showMessage\\\">Se encontraron valores repetidos al insertar valores a la lista</p>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-xs-2 text-xs-center\\\">\\r\\n            <div class=\\\"card mb-3\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <input class=\\\"form-control\\\" placeholder=\\\"Ingresar valor\\\" [(ngModel)]=\\\"valorNodoInsertar\\\" />\\r\\n                    <input class=\\\"form-control\\\" placeholder=\\\"Prioridad\\\" [(ngModel)]=\\\"prioridad\\\" *ngIf=\\\"idTipoLista==7\\\" />\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-xs-2 text-xs-center\\\">\\r\\n            <div class=\\\"card mb-3 text-center my-auto\\\">\\r\\n                <div class=\\\"card-body align-items-center\\\" >\\r\\n                    <button class=\\\"btn btn-secondary mr-3\\\" type=\\\"button\\\" (click)=\\\"clickAgregarNodo()\\\">{{lblBtnAgregar}}</button>\\r\\n                    <button class=\\\"btn btn-secondary\\\" type=\\\"button\\\" (click)=\\\"clickBorrarNodo()\\\">{{lblBtnBorrar}}</button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-xs-2\\\">\\r\\n            <div class=\\\"card mb-3 text-center my-auto\\\" *ngIf=\\\"!(idTipoLista>=5)\\\">\\r\\n                <input class=\\\"form-control\\\" placeholder=\\\"Indice 0..n\\\" [(ngModel)]=\\\"valorIndiceActualizar\\\" />\\r\\n                <input class=\\\"form-control\\\" placeholder=\\\"Valor a actualizar\\\" [(ngModel)]=\\\"valorNodoActualizar\\\" />\\r\\n                <button class=\\\"btn btn-secondary\\\" type=\\\"button\\\" (click)=\\\"clickActualizarNodo()\\\">Actualizar</button>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-xs-2 text-xs-center\\\">\\r\\n            <div class=\\\"card mb-3\\\">\\r\\n                <div class=\\\"card-body\\\" >\\r\\n                    <label *ngIf=\\\"!(idTipoLista>=5)\\\">Operar al: </label>\\r\\n                    <mat-radio-group aria-label=\\\"Select an option\\\" class=\\\"example-radio-group\\\"\\r\\n                    [(ngModel)]=\\\"opcionOperar\\\" *ngIf=\\\"!(idTipoLista>=5)\\\" >\\r\\n                        <mat-radio-button value=\\\"Inicio\\\" disabled=\\\"{{idTipoLista==5||idTipoLista==6}}\\\">Inicio</mat-radio-button>\\r\\n                        <mat-radio-button value=\\\"Fin\\\" disabled=\\\"{{idTipoLista==5||idTipoLista==6}}\\\">Fin</mat-radio-button>\\r\\n                    </mat-radio-group><br/>\\r\\n                    <label for=\\\"seleccionRepeticiones\\\">Repeticiones: </label>\\r\\n                    <mat-radio-group id=\\\"seleccionRepeticiones\\\" aria-label=\\\"Select an option\\\" class=\\\"example-radio-group\\\"\\r\\n                        [(ngModel)]=\\\"opcionRepeticiones\\\" >\\r\\n                        <mat-radio-button value=\\\"true\\\">true</mat-radio-button>\\r\\n                        <mat-radio-button value=\\\"false\\\">false</mat-radio-button>\\r\\n                    </mat-radio-group>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-xs-2\\\">\\r\\n            <div class=\\\"card mb-3 text-center my-auto\\\">\\r\\n                <small><label for=\\\"customRange2\\\" class=\\\"form-label\\\">Velocidad animacion: {{velocidadAnimacion}}</label></small>\\r\\n                <input type=\\\"range\\\" class=\\\"form-range\\\" min=\\\"0\\\" max=\\\"10\\\" id=\\\"customRange2\\\" [(ngModel)]=\\\"velocidadAnimacion\\\">\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-xl-12 text-xs-center\\\">\\r\\n            <div class=\\\"card mb-3\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <!--<textarea class=\\\"form-control\\\" rows=\\\"3\\\"></textarea>-->\\r\\n                    <canvas #canvas width=\\\"1020\\\" height=\\\"1000\\\"></canvas>\\r\\n                    <!--<button (click)=\\\"play()\\\">Play</button>-->\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div> \\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-xl-6 text-xs-center\\\">\\r\\n            <fieldset class=\\\"form-group\\\">\\r\\n                <small><label>JSON a cargar &#123;\\\"categoria\\\":\\\"Estructura Lineal\\\",\\\"nombre\\\":\\\"{{tituloLista}}\\\",\\\"animacion\\\":\\\"5\\\",\\\"valores\\\":[\\\"n1\\\",\\\"n2\\\",..]&#125;</label></small>\\r\\n                <textarea class=\\\"form-control\\\" rows=\\\"2\\\">{{fileContent}}</textarea>\\r\\n                <input type=\\\"file\\\" (change)=\\\"cargarArchivo($event.target.files)\\\">\\r\\n                <button class=\\\"btn btn-secondary\\\" type=\\\"submit\\\" (click)=\\\"clickCargar()\\\">Cargar a lista dinamica</button>\\r\\n            </fieldset>\\r\\n        </div>\\r\\n        <div class=\\\"col-xl-6 text-xs-center\\\">\\r\\n            <fieldset class=\\\"form-group\\\">\\r\\n                <label>JSON salida</label>\\r\\n                <textarea class=\\\"form-control\\\" rows=\\\"2\\\">{{listaEnlJSon}}</textarea>\\r\\n                <button class=\\\"btn btn-secondary\\\" type=\\\"submit\\\" (click)=\\\"downloadJson()\\\">Guardar</button>\\r\\n            </fieldset>\\r\\n        </div>\\r\\n    </div>   \\r\\n</div>\";","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ListasEddComponent } from './listas-edd.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: ListasEddComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class ListasEddRoutingModule {}\r\n","export default class NodoSimple {\r\n    private data: any;\r\n    private next: NodoSimple;\r\n    private prioridad:number;\r\n  \r\n    constructor(data: any) {\r\n      this.data = data;\r\n      this.next = null;\r\n    }\r\n    public getNext(): NodoSimple {\r\n      return this.next;\r\n    }\r\n    public getData(): any {\r\n      return this.data;\r\n    }\r\n    public getPrioridad():number{\r\n      return this.prioridad;\r\n    }\r\n    public setPrioridad(prioridad:number){\r\n      this.prioridad=prioridad;\r\n    }\r\n    public setNext(next: NodoSimple): void {\r\n      this.next = next;\r\n    }\r\n    public setData(data: any): void {\r\n      this.data = data;\r\n    }\r\n    \r\n}","import NodoSimple from \"./nodo-simple\";\r\nimport {JsonSalidaNodoPrioridad} from './json-nodo';\r\n\r\nexport default class ColaPrioridad {\r\n  private colaPrioridad:NodoSimple;\r\n  longitud:number;\r\n  constructor(){\r\n    this.longitud=0;\r\n    this.colaPrioridad=null;\r\n  }\r\n  estaVacia(): boolean {\r\n    return this.longitud == 0;\r\n  }\r\n  toArray(): any[] {\r\n    const colaArray = new Array(this.longitud);\r\n    let aux=this.colaPrioridad;\r\n    let i=0;\r\n    while(i<this.longitud){\r\n      colaArray[i]=aux.getData();\r\n      i++;\r\n      aux=aux.getNext();\r\n    }\r\n    return colaArray;\r\n  }\r\n  toArrayJson(): JsonSalidaNodoPrioridad[] {\r\n    const colaArray = new Array(this.longitud);\r\n    let aux=this.colaPrioridad;\r\n    let i=0;\r\n    while(i<this.longitud){\r\n      colaArray[i]=new JsonSalidaNodoPrioridad(aux.getData(),aux.getPrioridad());\r\n      i++;\r\n      aux=aux.getNext();\r\n    }\r\n    return colaArray;\r\n  }\r\n  size(): number {\r\n    return this.longitud;\r\n  }\r\n  \r\n  encolar(data: any, prioridad:number): void {\r\n    let nuevoNodo:NodoSimple;\r\n    nuevoNodo=new NodoSimple(data);\r\n    nuevoNodo.setPrioridad(prioridad);\r\n\r\n    if(this.longitud == 0){\r\n        this.colaPrioridad=nuevoNodo;\r\n    } else{\r\n        let flag = false;\r\n        let aux=this.colaPrioridad;\r\n        let previo=this.colaPrioridad;\r\n        //busca en la cola si la prioridad del nodo nuevo es menor a una existente \r\n        for(let i =0 ; i< this.longitud; i++){\r\n            if(nuevoNodo.getPrioridad() < aux.getPrioridad()){\r\n                previo.setNext(nuevoNodo);\r\n                nuevoNodo.setNext(aux);\r\n                flag = true;\r\n                break;\r\n            }\r\n            previo=aux;\r\n            aux=aux.getNext();\r\n        }\r\n        //si no encuentra, insertar al final de la cola\r\n        if(!flag){\r\n          let aux=this.colaPrioridad;\r\n          while(aux.getNext()!=null){\r\n            aux=aux.getNext();\r\n          }\r\n          aux.setNext(nuevoNodo);\r\n        }\r\n    }\r\n    this.longitud++;\r\n  }\r\n\r\n  desencolar() {\r\n    let nodo=null;\r\n    if(this.longitud>0){\r\n      nodo = this.colaPrioridad;\r\n      this.colaPrioridad=this.colaPrioridad.getNext();\r\n      this.longitud--;\r\n    }\r\n    return nodo;\r\n  }\r\n  buscar(valor):boolean{\r\n    let existeValor=false;\r\n    let aux=this.colaPrioridad;\r\n    while(aux!=null&&!existeValor){\r\n      if(aux.getData()==valor){\r\n        return true;\r\n      }\r\n      aux=aux.getNext();\r\n    }\r\n    return existeValor;\r\n  }\r\n  peek() {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n  actualizar(posicion, newData){\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n}\r\n","import NodoSimple from \"./nodo-simple\";\r\nimport ListaPadre from \"./lista-padre\";\r\n\r\nexport default class ListaSimpleEnlazada implements ListaPadre {\r\n  inicio: NodoSimple;\r\n\r\n  constructor() {\r\n    this.inicio = null;\r\n  }\r\n\r\n  public estaVacia(): boolean {\r\n    return this.inicio === null;\r\n  }\r\n\r\n  public size(): number {\r\n    if (this.estaVacia()) {\r\n      return 0;\r\n    } else {\r\n      let i = 0;\r\n      let aux = this.inicio;\r\n      while (aux) {\r\n        i++;\r\n        aux = aux.getNext();\r\n      }\r\n      return i;\r\n    }\r\n  }\r\n\r\n  public agregarAlInicio(data: any): void {\r\n    if (data) {\r\n      if (this.estaVacia()) {\r\n        this.inicio = new NodoSimple(data);\r\n      } else {\r\n        const node = new NodoSimple(data);\r\n        node.setNext(this.inicio);\r\n        this.inicio = node;\r\n      }\r\n    } else {\r\n      throw new Error(\"El parametro data no puede ser null o undefined\");\r\n    }\r\n  }\r\n\r\n  public agregarAlFinal(data: any): void {\r\n    if (data) {\r\n      if (this.estaVacia()) {\r\n        this.inicio = new NodoSimple(data);\r\n      } else {\r\n        let aux = this.inicio;\r\n        while (aux.getNext()) {\r\n          aux = aux.getNext();\r\n        }\r\n        aux.setNext(new NodoSimple(data));\r\n      }\r\n    } else {\r\n      throw new Error(\"El parametro data no puede ser null o undefined\");\r\n    }\r\n  }\r\n\r\n  public agregarEnIndice(data: any, i: number): void {\r\n    if (data && i) {\r\n      if (this.estaVacia() || i === 0) {\r\n        this.agregarAlInicio(data);\r\n      } else if (i === this.size() - 1) {\r\n        this.agregarAlFinal(data);\r\n      } else if (i > this.size()) {\r\n        throw new Error(\"El parametro indice (i) no puede ser más grande que el tamaño de la lista\");\r\n      } else if (i < 0) {\r\n        this.agregarEnIndice(data, this.size() + i);\r\n      } else {\r\n        let j = 0;\r\n        let aux = this.inicio;\r\n        const node = new NodoSimple(data);\r\n        while (i < j) {\r\n          aux = aux.getNext();\r\n          j++;\r\n        }\r\n        node.setNext(aux.getNext());\r\n        aux.setNext(node);\r\n      }\r\n    } else if (data) {\r\n      throw new Error(\"El parametro indice (i) no puede ser null o undefined\");\r\n    } else if (i) {\r\n      throw new Error(\"El parametro data no puede ser null o undefined\");\r\n    } else {\r\n      throw new Error(\"Los dos parametros no pueden ser null o undefined\");\r\n    }\r\n  }\r\n\r\n  public borrarAlInicio(): any {\r\n    if (this.estaVacia()) {\r\n      return null;\r\n    } else {\r\n      const temp = this.inicio;\r\n      this.inicio = this.inicio.getNext();\r\n      temp.setNext(null);\r\n      return temp.getData();\r\n    }\r\n  }\r\n\r\n  public borrarAlFinal(): any {\r\n    if (this.estaVacia()) {\r\n      return null;\r\n    } else {\r\n      let aux = this.inicio;\r\n      while (aux.getNext().getNext()) {\r\n        aux = aux.getNext();\r\n      }\r\n      const temp = aux.getNext();\r\n      aux.setNext(null);\r\n      return temp.getData();\r\n    }\r\n  }\r\n\r\n  public borrarEnIndice(i: number): any {\r\n    if (i) {\r\n      if (this.estaVacia() || i === 0) {\r\n        return this.borrarAlInicio();\r\n      } else if (i === this.size() - 1) {\r\n        return this.borrarAlFinal();\r\n      } else if (i > this.size()) {\r\n        throw new Error(\"El parametro indice (i) no puede ser más grande que el tamaño de la lista\");\r\n      } else if (i < 0) {\r\n        return this.borrarEnIndice(this.size() + i);\r\n      } else {\r\n        let j = 0;\r\n        let aux = this.inicio;\r\n        while (i < j) {\r\n          aux = aux.getNext();\r\n          j++;\r\n        }\r\n        const temp = aux.getNext();\r\n        aux.setNext(aux.getNext().getNext());\r\n        temp.setNext(null);\r\n        return temp.getData();\r\n      }\r\n    } else {\r\n      throw new Error(\"El parametro indice (i) no puede ser null o undefined\");\r\n    }\r\n  }\r\n\r\n  public toArray(): any[] {\r\n    let node = this.inicio;\r\n    const array = new Array(this.size());\r\n    for (let i = 0; i < array.length; i++) {\r\n      array[i] = node.getData();\r\n      node = node.getNext();\r\n    }\r\n    return array;\r\n  }\r\n\r\n  public forEach(cb: any): void {\r\n    const list = this;\r\n    const size = this.size();\r\n    let node = this.inicio;\r\n    for (let i = 0; i < size; i++) {\r\n      cb(node.getData(), i, list);\r\n      node = node.getNext();\r\n    }\r\n  }\r\n\r\n  public push(data:any):void{\r\n\r\n  }\r\n  public pop():void{\r\n    \r\n  }\r\n  actualizar(posicion, newData){\r\n    if (posicion < 0 || posicion >= this.size()) {\r\n      return false\r\n    }\r\n    let current = this.inicio\r\n    let index = 0\r\n      while(index++ < posicion){\r\n      current = current.getNext();\r\n    }\r\n    current.setData ( newData);\r\n  }\r\n  buscar(valor):boolean{\r\n    let existeValor=false;\r\n    let node = this.inicio;\r\n    for (let i = 0; i < this.size(); i++) {\r\n      if(valor== node.getData()){\r\n        existeValor=true; break;\r\n      }\r\n      node = node.getNext();\r\n    }\r\n    return existeValor;\r\n  }\r\n}","export default \".lb-sm {\\r\\n    font-size: 12px;\\r\\n  }\\r\\n  textarea { font-size: 12px; }\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpc3Rhcy1lZGQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGVBQWU7RUFDakI7RUFDQSxXQUFXLGVBQWUsRUFBRSIsImZpbGUiOiJsaXN0YXMtZWRkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubGItc20ge1xyXG4gICAgZm9udC1zaXplOiAxMnB4O1xyXG4gIH1cclxuICB0ZXh0YXJlYSB7IGZvbnQtc2l6ZTogMTJweDsgfVxyXG4iXX0= */\";","import NodoDoble from \"./nodo-doble\";\r\nimport ListaPadre from \"./lista-padre\";     \r\nexport default class ListaDobleEnlazada implements ListaPadre {\r\n    inicio: NodoDoble;\r\n    final:NodoDoble;\r\n    longitud:number;\r\n    constructor() {\r\n        this.inicio = null;\r\n        this.final=null;\r\n        this.longitud=0;\r\n      }\r\n    estaVacia(): boolean {\r\n        return this.longitud==0;\r\n    }\r\n    toArray(): any[] {\r\n      const array = new Array(this.longitud);\r\n      let node = this.inicio;\r\n      // 2. Avanza sucesivamente, obtén cada nodo\r\n      for (let i = 0; i < array.length; i++) {\r\n        array[i] = node.getData()\r\n        node = node.getNext();\r\n      }\r\n      return array;\r\n    }\r\n    size(): number {\r\n        return this.longitud;\r\n    }\r\n    agregarAlInicio(data: any): void {\r\n        if(data){\r\n            let newNode = new NodoDoble(data)\r\n            if (this.longitud == 0) {\r\n                this.final = newNode\r\n                this.inicio = newNode \r\n            }else {\r\n                newNode.setNext ( this.inicio );\r\n                this.inicio.setPrev(newNode);\r\n                this.inicio = newNode\r\n            }\r\n            this.longitud += 1\r\n        }\r\n    }\r\n    agregarAlFinal(data: any): void {\r\n        if(data){\r\n            let newNode = new NodoDoble(data)\r\n            if (this.longitud == 0) {\r\n                this.final = newNode\r\n                this.inicio = newNode \r\n            }else {\r\n                newNode.setPrev ( this.final );\r\n                this.final.setNext( newNode);\r\n                this.final = newNode\r\n            }\r\n            this.longitud += 1\r\n        }\r\n    }\r\n    borrarAlInicio() {\r\n        this.removeAt(0);\r\n    }\r\n    borrarAlFinal() {\r\n        this.removeAt(this.longitud);\r\n    }\r\n    push(data: any): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    pop() {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    actualizar(posicion, newData){\r\n        if (posicion < 0 || posicion >= this.longitud) {\r\n          return false\r\n        }\r\n        let current = this.inicio\r\n        let index = 0\r\n        if (this.longitud / 2 > posicion) {\r\n          while(index++ < posicion){\r\n          current = current.getNext();\r\n        }\r\n        }else{\r\n          current = this.final\r\n          index = this.longitud - 1\r\n          while (index -- > posicion) {\r\n            current = current.getPrev();\r\n          }\r\n        }\r\n        current.setData ( newData);\r\n    }\r\n    removeAt( position ){\r\n        // 1. Juicio fuera de límites\r\n        if (position < 0 || position >= this.longitud) {\r\n          return null\r\n        }\r\n        // 2. Eliminar nodo\r\n        // Cuando length == 1 en la lista enlazada\r\n        // Caso 1: solo hay un nodo en la lista vinculada\r\n        let current = this.inicio// Defina en la parte superior para facilitar las siguientes situaciones para devolver current.data\r\n        if (this.longitud == 1) {\r\n          this.inicio = null\r\n          this.final = null\r\n        // Cuando longitud> 1 en la lista enlazada\r\n        } else{\r\n          // Escenario 2: Eliminar el primer nodo\r\n          if (position == 0) {\r\n            this.inicio.getNext().setPrev(null)\r\n            this.inicio = this.inicio.getNext()\r\n          // Caso 3: Eliminar el último nodo\r\n          }else if(position == this.longitud - 1){\r\n            current = this.final// Volver al último nodo eliminado en este caso\r\n            this.final.getPrev().setNext(null)\r\n            this.final = this.final.getPrev()\r\n          }else{\r\n          // Caso 4: Elimina el nodo en el medio de la lista vinculada\r\n            let index = 0\r\n            while(index++ < position){\r\n              current = current.getNext()\r\n            }\r\n            current.getNext().setPrev(current.getPrev())\r\n            current.getPrev().setNext(current.getNext())\r\n          }\r\n        }\r\n        this.longitud -= 1\r\n      }\r\n      buscar(valor):boolean{\r\n        let existeValor=false;\r\n        let node = this.inicio;\r\n        for (let i = 0; i < this.size(); i++) {\r\n          if(valor== node.getData()){\r\n            existeValor=true; break;\r\n          }\r\n          node = node.getNext();\r\n        }\r\n        return existeValor;\r\n      }\r\n}"]}