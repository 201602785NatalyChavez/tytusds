{"version":3,"sources":["assets/img/Usac_Logo.png","components/Menu/menu.js","components/Menu/Galeria.js","assets/img/logo-fiusac.png","components/Header/Header.js","Paginas/Listasimple.js","Paginas/Listadoble.js","Paginas/Listacicurlarsimple.js","Paginas/listaciculardoble.js","Paginas/Pila.js","Paginas/Cola.js","Paginas/ColaPriori.js","Paginas/Burbuja.js","Paginas/Seleccion.js","Paginas/Insercion.js","Paginas/Rapido.js","Paginas/ABB.js","Paginas/AVL.js","Paginas/ArbolB.js","Paginas/ArbolB+.js","Paginas/ArbolMerkle.js","Paginas/Prox.js","App.js","index.js"],"names":["Menu","id","image","name","category","page","description","Galeria","useState","Estructuras","items","setItems","filterItem","categItem","updatedItems","filter","curElem","className","onClick","map","elem","to","pathname","src","require","default","alt","Navbar","href","logo2","Nodo","valor","siguiente","this","value","next","lista_simple","root","end","size","new_nodo","tmp","temp_n","list_gra","tmp_Nod","push","String","console","log","n_list","label","e_list","from","useStyles","makeStyles","theme","Fab","margin","spacing","width","textAlign","justifyContent","options","layout","hierarchical","edges","color","ListaSimple","tmp_list","Valueref","useRef","graph","nodes","state","txtValue","events","parseInt","current","noValidate","autoComplete","TextField","inputRef","Tooltip","title","add_ini","add_fin","add_order","delete_nod","ver_lista","aria-label","type","style","height","anterior","dobleLista","cabeza","cola","cantidad","actual","resultado","nuevoNodo","indice","i","valorDevuelto","borrarCola","borrarCabeza","agregarEnCola","agregarEnCabeza","insertarEn","imprimir","imprimirReverso","borrarEn","obtenerCantidad","vacia","ListaDoble","ListaCircularSimple","ListaCicularDoble","pila","objetos","arriba","borrarValor","Pila","newpila","pop","peek","valores","inicio","final","Cola","newcola","enqueue","dequeue","priori","sig","priorida","cola_Prioridad","head","new_nod","tmp_nod","printlist","new_valor","ColaPriori","new_cola","txtpriority","txtUpdate","encolar","descolar","editar","arreglo","Burbuja","barChartData","change1","bind","setState","labels","datasets","backgroundColor","borderColor","borderWidth","data","length","j","temp","toString","Component","array2","selectionSort","array","n","min","Seleccion","cambios","Rapido","ABB","AVL","ArbolB","ArbolBmas","ArbolMerkle","prox","App","basename","exact","path","component","Prox","Insercion","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cacfe634.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Usac_Logo.1eb9f308.png\";","const Menu = [\r\n    {\r\n        id: 1,\r\n        image: \"../../assets/img/Usac_Logo.png\",\r\n        name:\"Lista simplemente enlazada\",\r\n        category: \"Estructuras lineales\",\r\n        page: \"/listasimple\",\r\n        description: 'Es una lista enlazada de nodos, donde cada nodo tiene un único campo de enlace. Una variable de ' +\r\n            'referencia contiene una referencia al primer nodo, cada nodo (excepto el último) enlaza con el nodo siguiente,' +\r\n            ' y el enlace del último nodo contiene NULL para indicar el final de la lista. '\r\n    },\r\n\r\n    {\r\n        id: 2,\r\n        image: \"../../../../pruebareact/src/assets/img/LOL_Logo.png\",\r\n        name:\"Lista doblemente enlazada\",\r\n        category: \"Estructuras lineales\",\r\n        page: \"/listadoble\",\r\n        description: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. '\r\n    },\r\n    {\r\n        id: 3,\r\n        image: \"../../../../pruebareact/src/assets/img/Usac_Logo.png\",\r\n        name:\"Lista circular simplemente enlazada\",\r\n        category: \"Estructuras lineales\",\r\n        page: \"/listacircularsimpleenlazada\",\r\n        description: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. '\r\n    },\r\n    {\r\n        id: 4,\r\n        image: \"../../../../pruebareact/src/assets/img/Usac_Logo.png\",\r\n        name:\"Lista circular doblemente enlazada\",\r\n        category: \"Estructuras lineales\",\r\n        page: \"/listacirculardobleenlazada\",\r\n        description: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. '\r\n    },\r\n    {\r\n        id: 5,\r\n        image: \"image: \\\"../../../../pruebareact/src/assets/img/Usac_Logo.png\\\",\",\r\n        name:\"Pila\",\r\n        category: \"Estructuras lineales\",\r\n        page: \"/pila\",\r\n        description: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. '\r\n    },\r\n    {\r\n        id: 6,\r\n        image: \"../../assets/img/Usac_Logo.png\",\r\n        name:\"Cola\",\r\n        category: \"Estructuras lineales\",\r\n        page: \"/cola\",\r\n        description: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. '\r\n    },\r\n    {\r\n        id: 7,\r\n        image: \"../../assets/img/Usac_Logo.png\",\r\n        name:\"Cola de prioridad\",\r\n        category: \"Estructuras lineales\",\r\n        page: \"/coladeprioridad\",\r\n        description: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. '\r\n    },\r\n    {\r\n        id: 8,\r\n        image: \"../../assets/img/Usac_Logo.png\",\r\n        name:\"Burbuja\",\r\n        category: \"Ordenamientos\",\r\n        page: \"/burbuja\",\r\n        description: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. '\r\n    },\r\n    {\r\n        id: 9,\r\n        image: \"../../assets/img/Usac_Logo.png\",\r\n        name:\"Selección\",\r\n        category: \"Ordenamientos\",\r\n        page: \"/seleccion\",\r\n        description: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. '\r\n    },\r\n    {\r\n        id: 10,\r\n        image: \"../../assets/img/Usac_Logo.png\",\r\n        name:\"Inserción\",\r\n        category: \"Ordenamientos\",\r\n        page: \"/insercion\",\r\n        description: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. '\r\n    },\r\n    {\r\n        id: 11,\r\n        image: \"../../assets/img/Usac_Logo.png\",\r\n        name:\"Rápido\",\r\n        category: \"Ordenamientos\",\r\n        page: \"/rapido\",\r\n        description: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. '\r\n    },\r\n    {\r\n        id: 12,\r\n        image: \"../../assets/img/Usac_Logo.png\",\r\n        name:\"Árbol binario de búsqueda\",\r\n        category: \"Estructuras arbóreas\",\r\n        page: \"/abb\",\r\n        description: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. '\r\n    },\r\n    {\r\n        id: 13,\r\n        image: \"../../assets/img/Usac_Logo.png\",\r\n        name:\"AVL\",\r\n        category: \"Estructuras arbóreas\",\r\n        page: \"/avl\",\r\n        description: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. '\r\n    },\r\n    {\r\n        id: 14,\r\n        image: \"../../assets/img/Usac_Logo.png\",\r\n        name:\"Árbol B\",\r\n        category: \"Estructuras arbóreas\",\r\n        page: \"/arbolb\",\r\n        description: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. '\r\n    },\r\n    {\r\n        id: 15,\r\n        image: \"../../assets/img/Usac_Logo.png\",\r\n        name:\"Árbol B+\",\r\n        category: \"Estructuras arbóreas\",\r\n        page: \"/arbolb+\",\r\n        description: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. '\r\n    },\r\n    {\r\n        id: 16,\r\n        image: \"../../assets/img/Usac_Logo.png\",\r\n        name:\"Árbol de Merkle\",\r\n        category: \"Estructuras arbóreas\",\r\n        page: \"/arbolmerkle\",\r\n        description: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. '\r\n    },\r\n    {\r\n        id: 17,\r\n        image: \"../../assets/img/Usac_Logo.png\",\r\n        name:\"Tabla Hash abierta\",\r\n        category: \"Estructuras no lineales\",\r\n        page: \"/listadoble\",\r\n        description: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. '\r\n    },\r\n    {\r\n        id: 18,\r\n        image: \"../../assets/img/Usac_Logo.png\",\r\n        name:\"Tabla Hash cerrada\",\r\n        category: \"Estructuras no lineales\",\r\n        page: \"/listadoble\",\r\n        description: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. '\r\n    },\r\n    {\r\n        id: 19,\r\n        image: \"../../assets/img/Usac_Logo.png\",\r\n        name:\"Recorrido y búsqueda por anchura de grafos\",\r\n        category: \"Estructuras no lineales\",\r\n        page: \"/listadoble\",\r\n        description: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. '\r\n    },\r\n    {\r\n        id: 20,\r\n        image: \"../../assets/img/Usac_Logo.png\",\r\n        name:\"Recorrido y búsqueda por profundidad de grafos\",\r\n        category: \"Estructuras no lineales\",\r\n        page: \"/listadoble\",\r\n        description: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. '\r\n    },\r\n    {\r\n        id: 21,\r\n        image: \"../../assets/img/Usac_Logo.png\",\r\n        name:\"Algoritmo de costo uniforme\",\r\n        category: \"Estructuras no lineales\",\r\n        page: \"/listadoble\",\r\n        description: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. '\r\n    },\r\n    {\r\n        id: 22,\r\n        image: \"../../assets/img/Usac_Logo.png\",\r\n        name:\"Árbol de recubrimiento mínimo\",\r\n        category: \"Estructuras no lineales\",\r\n        page: \"/404\",\r\n        description: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. '\r\n    },\r\n    {\r\n        id: 23,\r\n        image: \"../../assets/img/Usac_Logo.png\",\r\n        name:\"Código de hamming\",\r\n        category: \"Algoritmo de codificación\",\r\n        page: \"/404\",\r\n        description: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. '\r\n    },\r\n    {\r\n        id: 24,\r\n        image: \"../../assets/img/Usac_Logo.png\",\r\n        name:\"Algoritmo de Huffman\",\r\n        category: \"Algoritmo de codificación\",\r\n        page: \"/404\",\r\n        description: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. '\r\n    },\r\n    {\r\n        id: 25,\r\n        image: \"../../assets/img/Usac_Logo.png\",\r\n        name:\"Algoritmo LZW\",\r\n        category: \"Algoritmo de codificación\",\r\n        page: \"/404\",\r\n        description: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. '\r\n    },\r\n    {\r\n        id: 26,\r\n        image: \"../../assets/img/Usac_Logo.png\",\r\n        name:\"Cifrado Feistel\",\r\n        category: \"Algoritmo de codificación\",\r\n        page: \"/404\",\r\n        description: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. '\r\n    },\r\n    {\r\n        id: 27,\r\n        image: \"../../assets/img/Usac_Logo.png\",\r\n        name:\"Cifrado RSA\",\r\n        category: \"Algoritmo de codificación\",\r\n        page: \"/404\",\r\n        description: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. '\r\n    },\r\n    {\r\n        id: 28,\r\n        image: \"../../assets/img/Usac_Logo.png\",\r\n        name:\"Matrices dispersas\",\r\n        category: \"Estructuras Compuestas\",\r\n        page: \"/404\",\r\n        description: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. '\r\n    },\r\n    {\r\n        id: 29,\r\n        image: \"../../assets/img/Usac_Logo.png\",\r\n        name:\"Row-major (2D a 1D)\",\r\n        category: \"Estructuras Compuestas\",\r\n        page: \"/404\",\r\n        description: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. '\r\n    },\r\n    {\r\n        id: 30,\r\n        image: \"../../assets/img/Usac_Logo.png\",\r\n        name:\"Col-major (2D a 1D)\",\r\n        category: \"Estructuras Compuestas\",\r\n        page: \"/404\",\r\n        description: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. '\r\n    },\r\n    {\r\n        id: 31,\r\n        image: \"../../assets/img/Usac_Logo.png\",\r\n        name:\"Construcción de estructuras compuestas\",\r\n        category: \"Estructuras Compuestas\",\r\n        page: \"/404\",\r\n        description: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. '\r\n    }\r\n\r\n];\r\n\r\n\r\n\r\nexport default Menu;","import React, {useState} from \"react\";\r\nimport \"../Menu/tab.css\";\r\nimport Estructuras from\"./menu\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nconst Galeria = () => {\r\n\r\n    const [items, setItems] = useState(Estructuras);\r\n\r\n    const filterItem = (categItem) => {\r\n        const updatedItems = Estructuras.filter((curElem) =>{\r\n            return curElem.category === categItem;\r\n        });\r\n\r\n        setItems(updatedItems);\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        <>\r\n            <h1 className={\" mt-5 text-center main-heading\"}>\r\n               Visualización de estructuras de datos y algoritmos\r\n            </h1>\r\n            <hr/>\r\n\r\n                <div className={\"formii\"}>\r\n                    <button className={\"btn btn-warning\"} onClick={() => filterItem('Estructuras lineales')}>Estructuras Lineales</button>\r\n                    <button className={\"btn btn-warning\"} onClick={() => filterItem('Ordenamientos')}>Ordenamientos</button>\r\n                    <button className={\"btn btn-warning\"} onClick={() => filterItem('Estructuras arbóreas')}>Estructuras arbóreas</button>\r\n                    <button className={\"btn btn-warning\"} onClick={() => filterItem('Estructuras no lineales')}>Estructuras no lineales</button>\r\n                    <button className={\"btn btn-warning\"} onClick={() => filterItem('Algoritmo de codificación')}>Algoritmo de codificación</button>\r\n                    <button className={\"btn btn-warning\"} onClick={() => filterItem('Estructuras Compuestas')}>Estructuras Compuestas</button>\r\n                    <button className={\"btn btn-warning\"} onClick={() => setItems(Estructuras)}>Todos</button>\r\n                </div>\r\n\r\n\r\n\r\n\r\n            <div className={\"container\"}>\r\n                {\r\n                    items.map((elem)=>{\r\n                        const {name,image,description,page}=elem;\r\n                        return(\r\n                            <div className={\"item\"}>\r\n                                <Link to = {{pathname: page}} ><img src={require('../../assets/img/Usac_Logo.png').default} alt={\"\"} className={\"item-img\"}/></Link>\r\n\r\n                                <div className={\"item-text\"}>\r\n                                    <h3>{name}</h3>\r\n                                    <p>{description}</p>\r\n                                </div>\r\n\r\n                            </div>\r\n                        )\r\n\r\n                    })\r\n                }\r\n\r\n\r\n            </div>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Galeria","export default __webpack_public_path__ + \"static/media/logo-fiusac.e9c919d6.png\";","import React from \"react\";\r\nimport \"../Header/Header.css\"\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport logo2 from \"../../assets/img/logo-fiusac.png\"\r\n\r\nconst Navbar = ()=>{\r\n    return(\r\n        <header className={\"header  \"}>\r\n            <div className={\"container logo-nav-container \"}>\r\n\r\n                <a   href={\"https://portal.ingenieria.usac.edu.gt/\"} className={\"logo\"}><img src={logo2}/> </a>\r\n                <nav className={\"navigation\"}>\r\n                    <ul>\r\n                        <li><Link to = \"/\"> Inicio</Link> </li>\r\n                        <li><a href={\"https://portal.ingenieria.usac.edu.gt/\"}>Acerca</a> </li>\r\n                    </ul>\r\n\r\n                </nav>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Navbar","import React, { useState, useRef } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\r\nimport CachedIcon from \"@material-ui/icons/Cached\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport FormatListNumberedIcon from \"@material-ui/icons/FormatListNumbered\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport Graph from \"react-graph-vis\";\r\n\r\n\r\n//clase nodo\r\nclass Nodo {\r\n  constructor(valor, siguiente) {\r\n    this.value = valor;\r\n    this.next = siguiente;\r\n  }\r\n}\r\n\r\n//classe lista simple\r\nclass lista_simple {\r\n  constructor() {\r\n    this.root = null;\r\n    this.end = null;\r\n    this.size = 0;\r\n  }\r\n\r\n  add_fin(valor) {\r\n    let new_nodo = new Nodo(valor, null);\r\n\r\n    if (this.root === null) {\r\n      this.root = this.end = new_nodo;\r\n    } else {\r\n      this.end.next = new_nodo;\r\n      this.end = new_nodo;\r\n    }\r\n    this.size++;\r\n  }\r\n\r\n  add_ini(valor) {\r\n    let new_nodo = new Nodo(valor, null);\r\n    if (this.root === null) {\r\n      this.root = this.end = new_nodo;\r\n    } else {\r\n      new_nodo.next = this.root;\r\n      this.root = new_nodo;\r\n    }\r\n    this.size++;\r\n  }\r\n\r\n  add_order(valor) {\r\n    let new_nodo = new Nodo(valor, null);\r\n    if (this.root === null) {\r\n      this.root = this.end = new_nodo;\r\n    } else {\r\n      var tmp = this.root;\r\n      if (this.root == null || this.root.value >= new_nodo.value) {\r\n        new_nodo.next = this.root;\r\n        this.root = new_nodo;\r\n      } else {\r\n        while (tmp.next != null && tmp.next.value < new_nodo.value)\r\n          tmp = tmp.next;\r\n        \r\n        new_nodo.next = tmp.next;\r\n        tmp.next = new_nodo;\r\n      }\r\n    }\r\n    this.size++;\r\n  }\r\n\r\n  delete_nod(valor) {\r\n    var temp_n = this.root;\r\n    if(this.root !== null){\r\n      if(this.size == 1){\r\n        if(temp_n.value == valor){\r\n          this.root = null;\r\n        }\r\n        return;\r\n      }else{\r\n        while(temp_n.next != null){\r\n          if(temp_n.next.value == valor){\r\n            temp_n = temp_n.next.next\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  ver_lista() {\r\n    var list_gra = [];\r\n    var tmp_Nod = this.root;\r\n    if (this.size === 0) {\r\n      return;\r\n    } else if (this.size === 1) {\r\n      list_gra.push(String(tmp_Nod.value)+\"-> null\");\r\n    } else {\r\n      while (tmp_Nod.next != null) {\r\n        list_gra.push(String(tmp_Nod.value)+\" -> \"+String(tmp_Nod.next.value));\r\n        tmp_Nod = tmp_Nod.next;\r\n      }\r\n      list_gra.push(String(tmp_Nod.value)+\" ->  null\");\r\n    }\r\n    console.log(list_gra);\r\n    return list_gra;\r\n  }\r\n\r\n  nodes_list() {\r\n    var n_list = [];\r\n    let tmp_Nod = this.root;\r\n    if (this.size === 0) {\r\n      return;\r\n    } else if (this.size === 1) {\r\n      n_list.push({ id: tmp_Nod.value, label: \"null\" });\r\n    } else {\r\n      while (tmp_Nod !== this.end) {\r\n        n_list.push({ id: tmp_Nod.value, label: tmp_Nod.value });\r\n        tmp_Nod = tmp_Nod.next;\r\n      }\r\n      n_list.push({ id: tmp_Nod.value, label: tmp_Nod.value });\r\n    }\r\n    return n_list;\r\n  }\r\n\r\n  edges_list() {\r\n    var e_list = [];\r\n    let tmp_Nod = this.root;\r\n    if (this.size === 0) {\r\n      return;\r\n    } else if (this.size === 1) {\r\n      e_list.push({ from: tmp_Nod.value, to: \"null\" });\r\n    } else {\r\n      while (tmp_Nod !== this.end) {\r\n        e_list.push({ from: tmp_Nod.value, to: tmp_Nod.next.value});\r\n        tmp_Nod = tmp_Nod.next;\r\n      }\r\n      e_list.push({ from: tmp_Nod.value, to: \"null\" });\r\n    }\r\n    return e_list;\r\n  }\r\n\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  Fab: {\r\n    margin: theme.spacing(3),\r\n    width: \"10\",\r\n    textAlign: \"center\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n}));\r\n\r\n// opciones del grafo\r\nconst options = {\r\n  layout: {\r\n    hierarchical: false,\r\n  },\r\n  edges: {\r\n    color: \"#000000\",\r\n  },\r\n};\r\n\r\nconst ListaSimple = () => {\r\n  const tmp_list = new lista_simple(); //inicialice una nueva lista\r\n  const classes = useStyles(); //esto venia con los botones\r\n  var Valueref = useRef(\"\"); //para el textfield\r\n\r\n  const update_graph = () => {\r\n    setState(({ graph: { nodes, edges } }) => {\r\n      //const nodes_li = Object.values(tmp_list.nodes_list()) ;\r\n      //const edges_li = Object.values(tmp_list.edges_list());\r\n      return {\r\n        graph: {\r\n          nodes: [],\r\n          edges: [],\r\n        },\r\n      };\r\n    });\r\n  };\r\n\r\n  const [state, setState] = useState({\r\n    graph: {\r\n      nodes: [],\r\n      edges: [],\r\n    },\r\n  });\r\n\r\n  const { graph, events } = state;\r\n\r\n  // retorna el valor del texfield\r\n  const txtValue = () => {\r\n    return parseInt(Valueref.current.value);\r\n  };\r\n\r\n  return (\r\n    <div id={\"contenido\"}>\r\n      <div id={\"contol\"}>\r\n        <form className=\" \" noValidate autoComplete=\"off\">\r\n          <div className=\"center-align  \">\r\n            <TextField id=\"txt_val\" label=\"Valor\" inputRef={Valueref} />\r\n            <Tooltip title=\"Agregar al inicio\">\r\n              <Fab color=\"primary\" onClick={()=>{tmp_list.add_ini(txtValue())}}>\r\n                <FirstPage />\r\n              </Fab>\r\n            </Tooltip>\r\n            <Tooltip title=\"Agregar al Final\">\r\n              <Fab\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  tmp_list.add_fin(txtValue())\r\n                }}\r\n              >\r\n                <LastPageIcon />\r\n              </Fab>\r\n            </Tooltip>\r\n            <Tooltip title=\"Agregar en orden\">\r\n              <Fab\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  tmp_list.add_order(txtValue())\r\n                }}\r\n              >\r\n                <FormatListNumberedIcon />\r\n              </Fab>\r\n            </Tooltip>\r\n\r\n            <Tooltip title=\"Eliminar\">\r\n              <Fab\r\n                color=\"secondary\"\r\n                onClick={() => {\r\n                  tmp_list.delete_nod(txtValue());\r\n                }}\r\n              >\r\n                <DeleteIcon />\r\n              </Fab>\r\n            </Tooltip>\r\n            <Tooltip title=\"Buscar\">\r\n              <Fab color=\"primary\"onClick={()=>{tmp_list.ver_lista()}}>\r\n                <SearchIcon />\r\n              </Fab>\r\n            </Tooltip>\r\n            <Tooltip title=\"Cargar JSON\">\r\n              <Fab color=\"primary\">\r\n                <CloudUploadIcon />\r\n              </Fab>\r\n            </Tooltip>\r\n            <Tooltip title=\"Guardar JSON\">\r\n              <Fab color=\"primary\" aria-label=\"add\">\r\n                <SaveIcon />\r\n              </Fab>\r\n            </Tooltip>\r\n            <TextField\r\n              id=\"txt_update\"\r\n              label=\"Nuevo Valor\"\r\n              inputRef={Valueref}\r\n            />\r\n\r\n            <Tooltip title=\"Actualizar\">\r\n              <Fab\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n                onClick={() => {\r\n                  tmp_list.add_fin(txtValue());\r\n                }}\r\n              >\r\n                <CachedIcon />\r\n              </Fab>\r\n            </Tooltip>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <div className=\"\"> </div>\r\n      <p>Lista Simple : </p>\r\n      <Graph graph={graph} options={options} style={{ height: \"640px\" }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListaSimple;\r\n","import React from \"react\";\r\n\r\nclass Nodo {\r\n    constructor(valor, siguiente, anterior) {\r\n        this.valor = valor\r\n        this.siguiente = siguiente\r\n        this.anterior = anterior\r\n    }\r\n}\r\n\r\nclass listaDoble {\r\n    constructor() {\r\n        this.cabeza = null\r\n        this.cola = null\r\n        this.cantidad = 0\r\n    }\r\n\r\n    imprimir() {\r\n        let actual = this.cabeza\r\n        let resultado = ''\r\n        while(actual) {\r\n            resultado += actual.valor + '<=> '\r\n            actual = actual.siguiente\r\n        }\r\n\r\n        return resultado += ' X '\r\n    }\r\n\r\n    imprimirReverso() {\r\n        let actual = this.cola\r\n        let resultado = ''\r\n        while(actual) {\r\n            resultado += actual.valor + ' <-> '\r\n            actual = actual.anterior\r\n        }\r\n        return resultado += ' X '\r\n    }\r\n\r\n    agregarEnCabeza(valor) {\r\n        const nuevoNodo = new Nodo(valor, this.cabeza, null)\r\n\r\n        if (this.cabeza) {\r\n            nuevoNodo.siguiente = this.cabeza\r\n            this.cabeza.anterior = nuevoNodo\r\n            this.cabeza = nuevoNodo\r\n        } else {\r\n            this.cabeza = nuevoNodo\r\n            this.cola = nuevoNodo\r\n        }\r\n        this.cantidad++\r\n    }\r\n\r\n    agregarEnCola(valor) {\r\n        const nuevoNodo = new Nodo(valor, null, this.cola)\r\n\r\n        if (this.cola) {\r\n            nuevoNodo.anterior = this.cola\r\n            this.cola.siguiente = nuevoNodo\r\n            this.cola = nuevoNodo\r\n        } else {\r\n            this.cola = nuevoNodo\r\n            this.cabeza = nuevoNodo\r\n        }\r\n        this.cantidad++\r\n    }\r\n\r\n    insertarEn(valor, indice) {\r\n        if (indice < 0 || indice > this.cantidad) {\r\n            return null\r\n        }\r\n\r\n        const nuevoNodo = new Nodo(valor, null, null)\r\n        let actual = this.cabeza\r\n        let anterior\r\n\r\n        if (indice === 0) {\r\n            nuevoNodo.siguiente = actual\r\n            actual.anterior = nuevoNodo\r\n            this.cabeza = nuevoNodo\r\n        } else {\r\n            for (let i = 0; i < indice; i++) {\r\n                anterior = actual\r\n                actual = actual.siguiente\r\n            }\r\n            nuevoNodo.siguiente = actual\r\n            nuevoNodo.anterior = anterior\r\n            actual.anterior = nuevoNodo\r\n            anterior.siguiente = nuevoNodo\r\n        }\r\n        this.cantidad++\r\n    }\r\n\r\n    borrarCabeza() {\r\n        if (!this.cabeza) {\r\n            return null\r\n        }\r\n\r\n        const valorDevuelto = this.cabeza.valor\r\n\r\n        if (this.cabeza === this.cola) {\r\n            this.cabeza = null\r\n            this.cola = null\r\n        } else {\r\n            this.cabeza = this.cabeza.siguiente\r\n            this.cabeza.anterior = null\r\n        }\r\n        this.cantidad--\r\n        return valorDevuelto\r\n    }\r\n\r\n    borrarCola() {\r\n        if (!this.cola) {\r\n            return null\r\n        }\r\n\r\n        const valorDevuelto = this.cola.valor\r\n\r\n        if (this.cabeza === this.cola) {\r\n            this.cabeza = null\r\n            this.cola = null\r\n        } else {\r\n            this.cola = this.cola.anterior\r\n            this.cola.siguiente = null\r\n        }\r\n        this.cantidad--\r\n        return valorDevuelto\r\n    }\r\n\r\n    borrarEn(valor) {\r\n        let actual = this.cabeza\r\n        let anterior = null\r\n\r\n        while(actual !== null) {\r\n            if (actual.valor === valor) {\r\n                if (!anterior) {\r\n                    return this.borrarCabeza()\r\n                }else if (!actual.siguiente) {\r\n                    return this.borrarCola()\r\n                } else {\r\n                    anterior.siguiente = actual.siguiente\r\n                    actual.siguiente.anterior = anterior\r\n                }\r\n                this.cantidad--\r\n                return actual.valor\r\n            }\r\n            anterior = actual\r\n            actual = actual.siguiente\r\n        }\r\n        return null\r\n    }\r\n\r\n    obtenerCantidad() {\r\n        return this.cantidad\r\n    }\r\n\r\n    vacia() {\r\n        return this.cantidad === 0\r\n    }\r\n}\r\n\r\nconst dobleLista = new listaDoble()\r\ndobleLista.agregarEnCola(3)\r\ndobleLista.agregarEnCabeza(4)\r\ndobleLista.agregarEnCabeza(7)\r\ndobleLista.insertarEn(10, 2)\r\nconsole.log(dobleLista.imprimir())\r\nconsole.log(dobleLista.imprimirReverso())\r\nconsole.log(dobleLista.borrarCabeza())\r\nconsole.log(dobleLista.borrarCola())\r\nconsole.log(dobleLista.borrarEn(4))\r\nconsole.log(dobleLista.obtenerCantidad())\r\nconsole.log(dobleLista.vacia())\r\nconsole.log(dobleLista.imprimir())\r\nconsole.log(dobleLista.imprimirReverso())\r\n\r\nconst ListaDoble = () =>{\r\n    return (\r\n        <div id={\"contenido\"}>\r\n            <div id={\"contol\"}>\r\n                <table id={\"controles\"}>\r\n                    <td>\r\n                        <input type={\"text\"} size={\"10\"}/>\r\n                    </td>\r\n                    <td>\r\n                        <input type={\"Button\"}value={\"Agregar\"}/>\r\n                    </td>\r\n                    <td>\r\n                        <input type={\"Button\"}value={\"Eliminar\"}/>\r\n                    </td>\r\n                    <td>\r\n                        <input type={\"Button\"}value={\"Buscar\"}/>\r\n                    </td>\r\n                </table>\r\n\r\n            </div>\r\n            <div>\r\n                <h3>Aquí va la lista doble</h3>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ListaDoble;\r\n","import React from \"react\";\r\n\r\n\r\nconst ListaCircularSimple = () =>{\r\n    return (\r\n        <div id={\"contenido\"}>\r\n            <div id={\"contol\"}>\r\n                <table id={\"controles\"}>\r\n                    <td>\r\n                        <input type={\"text\"} size={\"10\"}/>\r\n                    </td>\r\n                    <td>\r\n                        <input type={\"Button\"}value={\"Agregar\"}/>\r\n                    </td>\r\n                    <td>\r\n                        <input type={\"Button\"}value={\"Eliminar\"}/>\r\n                    </td>\r\n                    <td>\r\n                        <input type={\"Button\"}value={\"Buscar\"}/>\r\n                    </td>\r\n                </table>\r\n\r\n            </div>\r\n            <div>\r\n                <h3>Aquí va la lista circular simple</h3>\r\n            </div>\r\n        </div>\r\n\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default ListaCircularSimple;","import React from \"react\";\r\n\r\n\r\nconst ListaCicularDoble = () =>{\r\n    return (\r\n        <div id={\"contenido\"}>\r\n            <div id={\"contol\"}>\r\n                <table id={\"controles\"}>\r\n                    <td>\r\n                        <input type={\"text\"} size={\"10\"}/>\r\n                    </td>\r\n                    <td>\r\n                        <input type={\"Button\"}value={\"Agregar\"}/>\r\n                    </td>\r\n                    <td>\r\n                        <input type={\"Button\"}value={\"Eliminar\"}/>\r\n                    </td>\r\n                    <td>\r\n                        <input type={\"Button\"}value={\"Buscar\"}/>\r\n                    </td>\r\n                </table>\r\n\r\n            </div>\r\n            <div>\r\n                <h3>Aquí va la lista circular doble</h3>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default ListaCicularDoble;","import React from \"react\";\r\n\r\nclass pila {\r\n    constructor() {\r\n        this.objetos = {}\r\n        this.arriba = 0\r\n    }\r\n\r\n    push(valor) {\r\n        this.arriba++\r\n        this.objetos[this.arriba] = valor\r\n    }\r\n\r\n    pop() {\r\n        let borrarValor\r\n\r\n        if (this.arriba) {\r\n            borrarValor = this.objetos[this.arriba]\r\n            delete this.objetos[this.arriba]\r\n            this.arriba--\r\n            return borrarValor\r\n        }\r\n    }\r\n\r\n    obtenerCantidad() {\r\n        return this.arriba\r\n    }\r\n\r\n    vacia() {\r\n        return this.obtenerCantidad() === 0\r\n    }\r\n\r\n    peek() {\r\n        if (this.vacia()) {\r\n            return null\r\n        }\r\n\r\n        return this.objetos[this.arriba]\r\n    }\r\n\r\n    imprimir() {\r\n        let resultado = ''\r\n        for (let i = this.arriba; i > 0; i--) {\r\n            resultado += this.objetos[i] + ' '\r\n        }\r\n        return resultado\r\n    }\r\n}\r\n\r\n\r\n\r\nconst Pila = () =>{\r\n    const newpila = new pila()\r\nconsole.log(newpila.vacia())\r\nnewpila.push('Plato #1')\r\nnewpila.push('Plato #2')\r\nnewpila.push('Plato #3')\r\nconsole.log(newpila.pop())\r\nconsole.log(newpila.peek())\r\nconsole.log(newpila.obtenerCantidad())\r\nconsole.log(newpila.vacia())\r\nconsole.log(newpila.imprimir())\r\n    return (\r\n        <div id={\"contenido\"}>\r\n            <div id={\"contol\"}>\r\n                <table id={\"controles\"}>\r\n                    <td>\r\n                        <input type={\"text\"} size={\"10\"}/>\r\n                    </td>\r\n                    <td>\r\n                        <input type={\"Button\"}value={\"Agregar\"}/>\r\n                    </td>\r\n                    <td>\r\n                        <input type={\"Button\"}value={\"Eliminar\"}/>\r\n                    </td>\r\n                    <td>\r\n                        <input type={\"Button\"}value={\"Buscar\"}/>\r\n                    </td>\r\n                </table>\r\n\r\n            </div>\r\n            <div>\r\n                <h3>Aquí va la Pila</h3>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Pila;\r\n","import React from \"react\";\r\n\r\nclass cola{\r\n    constructor() {\r\n        this.valores = {}\r\n        this.inicio = 0\r\n        this.final = 0\r\n    }\r\n\r\n    enqueue(valor) {\r\n        this.valores[this.final] = valor\r\n        this.final++\r\n    }\r\n\r\n    dequeue() {\r\n        if (this.inicio === this.final) {\r\n            return null\r\n        }\r\n\r\n        delete this.valores[this.inicio]\r\n        this.inicio++\r\n        return this.valores[this.inicio]\r\n    }\r\n}\r\n\r\n\r\nconst Cola = () =>{\r\nconst newcola = new cola()\r\nnewcola.enqueue(1)\r\nnewcola.enqueue(2)\r\nnewcola.enqueue(3)\r\nnewcola.enqueue(4)\r\nconsole.log(newcola.dequeue())\r\nconsole.log(newcola)\r\n\r\n    return (\r\n        <div id={\"contenido\"}>\r\n            <div id={\"contol\"}>\r\n                <table id={\"controles\"}>\r\n                    <td>\r\n                        <input type={\"text\"} size={\"10\"}/>\r\n                    </td>\r\n                    <td>\r\n                        <input type={\"Button\"}value={\"Agregar\"}/>\r\n                    </td>\r\n                    <td>\r\n                        <input type={\"Button\"}value={\"Eliminar\"}/>\r\n                    </td>\r\n                    <td>\r\n                        <input type={\"Button\"}value={\"Buscar\"}/>\r\n                    </td>\r\n                </table>\r\n\r\n            </div>\r\n            <div>\r\n                <h3>Aquí va la Cola</h3>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Cola;\r\n","import React, { useState, useRef } from \"react\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport CachedIcon from '@material-ui/icons/Cached';\r\nimport RemoveCircleOutlineIcon from '@material-ui/icons/RemoveCircleOutline';\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport Graph from \"react-graph-vis\";\r\n\r\n\r\nclass Nodo {\r\n    constructor(valor, siguiente, priori) {\r\n      this.valor = valor;\r\n      this.sig = siguiente;\r\n      this.priorida = priori;\r\n    }\r\n  }\r\n  \r\n  class cola_Prioridad {\r\n    constructor() {\r\n      this.head = null;\r\n      this.size = 0;\r\n    }\r\n  \r\n    encolar(valor, priori) {\r\n      var new_nod = new Nodo(valor, null, priori);\r\n      if (this.head === null) {\r\n        this.head = new_nod;\r\n      } else {\r\n        var tmp_nod = this.head;\r\n        if (this.head == null || this.head.priorida >= new_nod.priorida) {\r\n          new_nod.sig = this.head;\r\n          this.head = new_nod;\r\n        } else {\r\n          while (tmp_nod.sig != null && tmp_nod.sig.priorida < new_nod.priorida)\r\n            tmp_nod = tmp_nod.sig;\r\n  \r\n          new_nod.sig = tmp_nod.sig;\r\n          tmp_nod.sig = new_nod;\r\n        }\r\n        \r\n      }\r\n      this.printlist();\r\n      this.size++;\r\n      \r\n    }\r\n\r\n    descolar(){\r\n        if(this.head === null){\r\n            console.log(\"cola vacia\");\r\n        }else if(this.head.sig === null){\r\n            this.head = null;\r\n            console.log(\"cola vacia\");\r\n        }else{\r\n            this.head = this.head.sig;\r\n        }\r\n        this.printlist();\r\n    }\r\n\r\n    editar(valor,new_valor){\r\n      if(this.head !== null){\r\n        var tmp = this.head;\r\n        if(this.size == 1){\r\n          if(tmp.valor === valor){\r\n            tmp.valor = new_valor;\r\n          }\r\n        }else{\r\n          while(tmp.sig !== null){\r\n            if(tmp.valor === valor){\r\n              tmp.valor = new_valor;\r\n              break;\r\n            }\r\n            tmp = tmp.sig;\r\n          }\r\n        }\r\n        \r\n      }\r\n      this.printlist();\r\n    }\r\n\r\n    printlist() {\r\n      var list_gra = [];\r\n      let tmp_Nod = this.head;\r\n      if (this.size === 0) {\r\n        return ;\r\n      } else if (this.size === 1) {\r\n        list_gra.push(String(this.head.valor) + \"-> null\");\r\n      } else {\r\n        while (tmp_Nod.sig != null) {\r\n          list_gra.push(\r\n            String(tmp_Nod.valor) + \" -> \" + String(tmp_Nod.sig.valor)\r\n          );\r\n          tmp_Nod = tmp_Nod.sig;\r\n        }\r\n        list_gra.push(String(tmp_Nod.valor) + \" ->  null\");\r\n      }\r\n      console.log(list_gra);\r\n      return list_gra;\r\n    }\r\n  };\r\n  \r\n// opciones del grafo\r\nconst options = {\r\n  layout: {\r\n    hierarchical: false,\r\n  },\r\n  edges: {\r\n    color: \"#000000\",\r\n  },\r\n};\r\n  \r\n\r\nconst ColaPriori = () =>{\r\n  var new_cola = new cola_Prioridad();\r\n  var Valueref = useRef(\"\");\r\n  var txtpriority = useRef(\"\");\r\n  var txtUpdate = useRef(\"\");\r\n\r\n  const [state, setState] = useState({\r\n      graph: {\r\n        nodes: [],\r\n        edges: []\r\n      },\r\n    });\r\n  \r\n  const { graph, events } = state;\r\n    // retorna el valor del jtexfield\r\n  const txtValue = () => {\r\n    return parseInt(Valueref.current.value);\r\n  };\r\n\r\n\r\n  const txtPriori =() =>{\r\n    return parseInt(txtpriority.current.value)\r\n  }\r\n  const txtnewValue=()=>{\r\n    return parseInt(txtUpdate.current.value)\r\n  }\r\n    return (\r\n        <div id={\"contenido\"}>\r\n        <div id={\"contol\"}>\r\n          <form className=\" \" noValidate autoComplete=\"off\">\r\n            <div className=\"center-align  \">\r\n              <TextField id=\"txt_val\" label=\"Valor\" inputRef={Valueref} />\r\n              <TextField id=\"txt_val\" label=\"Prioridad\" inputRef={txtpriority} />\r\n              <Tooltip title=\"Agregar a cola\">\r\n                <Fab color=\"primary\" onClick={() => {new_cola.encolar(txtValue(),txtPriori())}}>\r\n                  <AddIcon />\r\n                </Fab>\r\n              </Tooltip>\r\n              <Tooltip title=\"Quitar de cola\">\r\n                <Fab\r\n                  color=\"secondary\" onClick={() => {new_cola.descolar()}}>\r\n                  <RemoveCircleOutlineIcon />\r\n                </Fab>\r\n              </Tooltip>\r\n              <TextField id=\"txt_val\" label=\"Nuevo Valor\" inputRef={txtUpdate} />\r\n              <Tooltip title=\"Actualizar\">\r\n                <Fab\r\n                  color=\"primary\" onClick={() => {new_cola.editar(txtValue(),txtnewValue())}}>\r\n                 <CachedIcon />\r\n                </Fab>\r\n              </Tooltip>\r\n\r\n              <Tooltip title=\"Cargar JSON\">\r\n                <Fab color=\"primary\">\r\n                  <CloudUploadIcon />\r\n                </Fab>\r\n              </Tooltip>\r\n              <Tooltip title=\"Guardar JSON\">\r\n                <Fab color=\"primary\" aria-label=\"add\">\r\n                  <SaveIcon />\r\n                </Fab>\r\n              </Tooltip>\r\n              \r\n            </div>\r\n          </form>\r\n        </div>\r\n        <div className=\"\"> </div>\r\n        <p>Lista Simple : </p>\r\n        <Graph\r\n          graph={graph}\r\n          options={options}\r\n          style={{ height: \"640px\" }}\r\n        />\r\n  \r\n      </div>\r\n    );\r\n  };\r\n\r\nexport default ColaPriori;\r\n","import React, {Component, component} from \"react\";\r\nimport {Bar,Line,Pie} from \"react-chartjs-2\";\r\n\r\nvar arreglo =[23,4,6,7,10,11,4545,20,80,90]\r\n\r\nclass Burbuja extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state={\r\n            barChartData:[]\r\n\r\n        }\r\n        this.change1= this.change1.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        this.setState({\r\n            barChartData: {\r\n                labels: arreglo,\r\n                datasets: [\r\n                    {\r\n                        backgroundColor: 'rgba(255,99,132,9.2)',\r\n                        borderColor: 'rgba(255,99,132,1)',\r\n                        borderWidth: 1,\r\n                        data: arreglo\r\n                    }\r\n                ]}\r\n        })\r\n    }\r\n\r\n\r\n    change1(){\r\n        for (let i = 0; i < arreglo.length; i++) {\r\n            for (let j = 0; j < arreglo.length; j++) {\r\n                console.log(\"Comparamos \"+arreglo[j] +\" > \"+ arreglo[j+1])\r\n                console.log(\"¿Es mayor?\")\r\n                if (arreglo[j] > arreglo[j + 1]) {\r\n                    console.log(\"Si\")\r\n                    console.log(\"Cambiamos\")\r\n                    let temp = arreglo[j];\r\n                    arreglo[j] = arreglo[j + 1];\r\n                    arreglo[j + 1] = temp;\r\n                    console.log(\"__________\")\r\n                }\r\n                console.log(\"No\")\r\n            }\r\n            console.log(\"##########\" )\r\n            break;\r\n        }\r\n\r\n        this.setState({\r\n            barChartData: {\r\n                labels: arreglo,\r\n                datasets: [\r\n                    {\r\n                        backgroundColor: 'rgba(255,99,132,9.2)',\r\n                        borderColor: 'rgba(255,99,132,1)',\r\n                        borderWidth: 1,\r\n                        data: arreglo\r\n                    }\r\n                ]}\r\n        })\r\n    }\r\n\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <Bar data = {this.state.barChartData}/>\r\n                <button onClick={this.change1}>Ordenar</button>\r\n                <h3>Ver en consola :3 Arreglo: {arreglo.toString()}</h3>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Burbuja;","import React from \"react\";\r\n\r\n\r\nlet array2 = [5,2,4,6,1,3];\r\nfunction selectionSort(array){\r\n    let n = array.length;\r\n\r\n    for (let i = 0; i< n; i++){ //Aquí vamos a buscar el número mínimo en el array que no está ordenado\r\n        let min = i;\r\n        for (let j = i+1;j < n ; j++){\r\n            if(array [j] < array[min]){\r\n                min = j;\r\n            }\r\n        }\r\n        if(min != i){\r\n            let tmp = array[i];\r\n            array[i]= array[min];\r\n            array[min] = tmp;\r\n        }\r\n    }\r\n    return array;\r\n\r\n}\r\n\r\n\r\nconst Seleccion = () =>{\r\n    return (\r\n        <div>\r\n            <h1>Aquí va el ordenamiento de Seleccion</h1>\r\n            <h2>5,2,4,6,1,3</h2>\r\n            <h3>{selectionSort(array2)}</h3>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Seleccion;","import React, {Component} from \"react\";\r\nimport {Bar} from \"react-chartjs-2\";\r\n\r\n\r\nlet arreglo = [\r\n    4025,\r\n    7677,\r\n    3875,\r\n    8107,\r\n    7531,\r\n    4912,\r\n    9515,\r\n    3150,\r\n    1593,\r\n    3114,\r\n    3943,\r\n    3616,\r\n    636,\r\n    5351,\r\n    6885,\r\n    634,\r\n    5761,\r\n    9193,\r\n    5218,\r\n    1949,\r\n    5386,\r\n    6154,\r\n    7323,\r\n    3221,\r\n    2508,\r\n    5443,\r\n    9096,\r\n    7239,\r\n    795,\r\n    7735,\r\n    890,\r\n    1167,\r\n    7555,\r\n    6764,\r\n    1998,\r\n    7113,\r\n    8213,\r\n    8894,\r\n    10,\r\n    540,\r\n    2132,\r\n    7847,\r\n    5041,\r\n    3295,\r\n    5668,\r\n    1842,\r\n    8142,\r\n    3909,\r\n    2499,\r\n    8546\r\n];\r\nlet cambios = 0;\r\n\r\n\r\n\r\nclass Seleccion extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state={\r\n            barChartData:[]\r\n\r\n        }\r\n        this.change1= this.change1.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        this.setState({\r\n            barChartData: {\r\n                labels: arreglo,\r\n                datasets: [\r\n                    {\r\n                        backgroundColor: 'rgba(255,99,132,9.2)',\r\n                        borderColor: 'rgba(255,99,132,1)',\r\n                        borderWidth: 1,\r\n                        data: arreglo\r\n                    }\r\n                ]}\r\n        })\r\n    }\r\n\r\n\r\n\r\n    change1(){\r\n\r\n        for (let i = cambios; i< arreglo.length; i++){ //Aquí vamos a buscar el número mínimo en el array que no está ordenado\r\n            let min = i; //Establecemos nuestro número actual como mínimo\r\n            for (let j = i+1;j < arreglo.length ; j++){  //utilizamos el segundo valor\r\n                console.log(\"Comparamos \"+arreglo[j] + \" < \"+arreglo[min])\r\n                if(arreglo [j] < arreglo[min]){ // comparamos si j es menor que nuestro actual\r\n                    console.log(\"Si es menor, cambiamos\")\r\n                    min = j; // cambiamos nuestro numero actual con j\r\n                }\r\n            }\r\n            if(min !== i){\r\n                let tmp = arreglo[i]; //utilizamos como temporal nuestro número\r\n                arreglo[i]= arreglo[min]; //cambiamos nuestro número mínimo con el actual\r\n                arreglo[min] = tmp; //\r\n                console.log(\"cambiamos el array\")\r\n                console.log(\"##########\")\r\n                cambios++\r\n                break;\r\n            }\r\n            console.log(\"No cambiamos el array\")\r\n            console.log(\"##########\")\r\n            cambios ++\r\n            break;\r\n\r\n\r\n        }\r\n\r\n        this.setState({\r\n            barChartData: {\r\n                labels: arreglo,\r\n                datasets: [\r\n                    {\r\n                        backgroundColor: 'rgba(255,99,132,9.2)',\r\n                        borderColor: 'rgba(255,99,132,1)',\r\n                        borderWidth: 1,\r\n                        data: arreglo\r\n                    }\r\n                ]}\r\n        })\r\n    }\r\n\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <Bar data = {this.state.barChartData}/>\r\n                <center><button onClick={this.change1}>Ordenar</button></center>\r\n                <h3>Ver en consola :3</h3>\r\n                <center>Arreglo:</center>\r\n                <h4> [{arreglo.toString()}]</h4>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Seleccion;","import React from \"react\";\r\n\r\n\r\nconst Rapido = () =>{\r\n    return (\r\n        <div>\r\n            <h3>Aquí va el ordenamiento Rapido</h3>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Rapido;","import React from \"react\";\r\n\r\n\r\nconst ABB = () =>{\r\n    return (\r\n        <div>\r\n            <h3>Aquí va el ABB</h3>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ABB;","import React from \"react\";\r\n\r\n\r\nconst AVL = () =>{\r\n    return (\r\n        <div>\r\n            <h3>Aquí va el AVL</h3>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AVL;","import React from \"react\";\r\n\r\n\r\nconst ArbolB = () =>{\r\n    return (\r\n        <div>\r\n            <h3>Aquí va el Arbol B</h3>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ArbolB;","import React from \"react\";\r\n\r\n\r\nconst ArbolBmas = () =>{\r\n    return (\r\n        <div>\r\n            <h3>Aquí va el Arbol B +</h3>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ArbolBmas;","import React from \"react\";\r\n\r\n\r\nconst ArbolMerkle = () =>{\r\n    return (\r\n        <div>\r\n            <h3>Aquí va el Arbol de Merkle</h3>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ArbolMerkle;","import React from \"react\";\r\n\r\n\r\nconst prox = () =>{\r\n    return (\r\n        <div>\r\n            <h3>Esta funcionalidad estará disponible en un futuro</h3>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default prox;","import React, {Component} from \"react\";\r\n\r\nimport Galeria from \"./components/Menu/Galeria\";\r\nimport Navbar from \"./components/Header/Header\";\r\nimport {HashRouter, Route} from \"react-router-dom\";\r\n\r\n\r\n// Paginas\r\nimport ListaSimple from \"./Paginas/Listasimple\";\r\nimport ListaDoble from \"./Paginas/Listadoble\";\r\nimport ListaCircularSimple from \"./Paginas/Listacicurlarsimple\";\r\nimport ListaCicularDoble from \"./Paginas/listaciculardoble\";\r\nimport Pila from \"./Paginas/Pila\";\r\nimport Cola from \"./Paginas/Cola\";\r\nimport ColaPriori from \"./Paginas/ColaPriori\";\r\nimport Burbuja from \"./Paginas/Burbuja\";\r\nimport Seleccion from \"./Paginas/Seleccion\";\r\nimport Insercion from \"./Paginas/Insercion\";\r\nimport Rapido from \"./Paginas/Rapido\";\r\nimport ABB from \"./Paginas/ABB\";\r\nimport AVL from \"./Paginas/AVL\";\r\nimport ArbolB from \"./Paginas/ArbolB\";\r\nimport ArbolBmas from \"./Paginas/ArbolB+\";\r\nimport ArbolMerkle from \"./Paginas/ArbolMerkle\";\r\nimport Prox from \"./Paginas/Prox\"\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass App extends Component{\r\n    render(){\r\n        return(\r\n            <HashRouter basename = '/'>\r\n                <>\r\n                    <Navbar />\r\n                </>\r\n                <Route exact path={\"/\"} component={Galeria}/>\r\n                <Route exact path={\"/404\"} component={Prox}/>\r\n                <Route path =\"/listasimple\" component={ListaSimple}/>\r\n                <Route path =\"/listadoble\" component={ListaDoble}/>\r\n                <Route path =\"/listacircularsimpleenlazada\" component={ListaCircularSimple}/>\r\n                <Route path =\"/listacirculardobleenlazada\" component={ListaCicularDoble}/>\r\n                <Route path =\"/pila\" component={Pila}/>\r\n                <Route path =\"/cola\" component={Cola}/>\r\n                <Route path =\"/coladeprioridad\" component={ColaPriori}/>\r\n                <Route path =\"/burbuja\" component={Burbuja}/>\r\n                <Route path =\"/seleccion\" component={Seleccion}/>\r\n                <Route path =\"/insercion\" component={Insercion}/>\r\n                <Route path =\"/rapido\" component={Rapido}/>\r\n                <Route path =\"/abb\" component={ABB}/>\r\n                <Route path =\"/avl\" component={AVL}/>\r\n                <Route path =\"/arbolb\" component={ArbolB}/>\r\n                <Route path =\"/arbolb+\" component={ArbolBmas}/>\r\n                <Route path =\"/arbolmerkle\" component={ArbolMerkle}/>\r\n            </HashRouter>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}